{"metadata":{"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"XLEncodable"}],"externalID":"s:7SwiftQL11XLEncodableP","role":"symbol","modules":[{"name":"SwiftQL"}],"symbolKind":"protocol","navigatorTitle":[{"text":"XLEncodable","kind":"identifier"}],"title":"XLEncodable","roleHeading":"Protocol"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/swiftql\/xlencodable"]}],"identifier":{"url":"doc:\/\/SwiftQL\/documentation\/SwiftQL\/XLEncodable","interfaceLanguage":"swift"},"topicSections":[{"generated":true,"anchor":"Instance-Methods","title":"Instance Methods","identifiers":["doc:\/\/SwiftQL\/documentation\/SwiftQL\/XLEncodable\/makeSQL(context:)"]},{"generated":true,"anchor":"Type-Aliases","title":"Type Aliases","identifiers":["doc:\/\/SwiftQL\/documentation\/SwiftQL\/XLEncodable\/MakeExpression"]},{"generated":true,"anchor":"Type-Methods","title":"Type Methods","identifiers":["doc:\/\/SwiftQL\/documentation\/SwiftQL\/XLEncodable\/unwrapSQL(context:builder:)"]}],"relationshipsSections":[{"type":"inheritedBy","title":"Inherited By","identifiers":["doc:\/\/SwiftQL\/documentation\/SwiftQL\/XLBindingReference","doc:\/\/SwiftQL\/documentation\/SwiftQL\/XLComparable","doc:\/\/SwiftQL\/documentation\/SwiftQL\/XLCreateStatement","doc:\/\/SwiftQL\/documentation\/SwiftQL\/XLCustomFunction","doc:\/\/SwiftQL\/documentation\/SwiftQL\/XLDeleteStatement","doc:\/\/SwiftQL\/documentation\/SwiftQL\/XLEnum","doc:\/\/SwiftQL\/documentation\/SwiftQL\/XLEquatable","doc:\/\/SwiftQL\/documentation\/SwiftQL\/XLExpression","doc:\/\/SwiftQL\/documentation\/SwiftQL\/XLInsertStatement","doc:\/\/SwiftQL\/documentation\/SwiftQL\/XLMetaCreate","doc:\/\/SwiftQL\/documentation\/SwiftQL\/XLMetaInsert","doc:\/\/SwiftQL\/documentation\/SwiftQL\/XLMetaNamedResult","doc:\/\/SwiftQL\/documentation\/SwiftQL\/XLMetaNullableNamedResult","doc:\/\/SwiftQL\/documentation\/SwiftQL\/XLMetaNullableResult","doc:\/\/SwiftQL\/documentation\/SwiftQL\/XLMetaResult","doc:\/\/SwiftQL\/documentation\/SwiftQL\/XLMetaUpdate","doc:\/\/SwiftQL\/documentation\/SwiftQL\/XLMetaWritableTable","doc:\/\/SwiftQL\/documentation\/SwiftQL\/XLOrderingTerm","doc:\/\/SwiftQL\/documentation\/SwiftQL\/XLQualifiedName","doc:\/\/SwiftQL\/documentation\/SwiftQL\/XLQueryComponent","doc:\/\/SwiftQL\/documentation\/SwiftQL\/XLQueryStatement","doc:\/\/SwiftQL\/documentation\/SwiftQL\/XLRowWritable","doc:\/\/SwiftQL\/documentation\/SwiftQL\/XLSimpleSelectQueryStatement","doc:\/\/SwiftQL\/documentation\/SwiftQL\/XLTableStatement","doc:\/\/SwiftQL\/documentation\/SwiftQL\/XLUpdateStatement"],"kind":"relationships"},{"type":"conformingTypes","title":"Conforming Types","identifiers":["doc:\/\/SwiftQL\/documentation\/SwiftQL\/Ascending","doc:\/\/SwiftQL\/documentation\/SwiftQL\/Swift\/Bool","doc:\/\/SwiftQL\/documentation\/SwiftQL\/ConstantCaseWhenThen","doc:\/\/SwiftQL\/documentation\/SwiftQL\/ConstantCaseWhenThenElse","doc:\/\/SwiftQL\/documentation\/SwiftQL\/Create","doc:\/\/SwiftQL\/documentation\/SwiftQL\/Foundation\/Data","doc:\/\/SwiftQL\/documentation\/SwiftQL\/Delete","doc:\/\/SwiftQL\/documentation\/SwiftQL\/Descending","doc:\/\/SwiftQL\/documentation\/SwiftQL\/Swift\/Double","doc:\/\/SwiftQL\/documentation\/SwiftQL\/From","doc:\/\/SwiftQL\/documentation\/SwiftQL\/GroupBy","doc:\/\/SwiftQL\/documentation\/SwiftQL\/Having","doc:\/\/SwiftQL\/documentation\/SwiftQL\/Insert","doc:\/\/SwiftQL\/documentation\/SwiftQL\/Swift\/Int","doc:\/\/SwiftQL\/documentation\/SwiftQL\/Join","doc:\/\/SwiftQL\/documentation\/SwiftQL\/Limit","doc:\/\/SwiftQL\/documentation\/SwiftQL\/Offset","doc:\/\/SwiftQL\/documentation\/SwiftQL\/Swift\/Optional","doc:\/\/SwiftQL\/documentation\/SwiftQL\/OrderBy","doc:\/\/SwiftQL\/documentation\/SwiftQL\/SQLScalarResult\/MetaCreate","doc:\/\/SwiftQL\/documentation\/SwiftQL\/SQLScalarResult\/MetaCreateAs","doc:\/\/SwiftQL\/documentation\/SwiftQL\/SQLScalarResult\/MetaInsert","doc:\/\/SwiftQL\/documentation\/SwiftQL\/SQLScalarResult\/MetaNamedResult","doc:\/\/SwiftQL\/documentation\/SwiftQL\/SQLScalarResult\/MetaNullableNamedResult","doc:\/\/SwiftQL\/documentation\/SwiftQL\/SQLScalarResult\/MetaNullableResult","doc:\/\/SwiftQL\/documentation\/SwiftQL\/SQLScalarResult\/MetaResult","doc:\/\/SwiftQL\/documentation\/SwiftQL\/SQLScalarResult\/MetaUpdate","doc:\/\/SwiftQL\/documentation\/SwiftQL\/SQLScalarResult\/MetaWritableTable","doc:\/\/SwiftQL\/documentation\/SwiftQL\/Select","doc:\/\/SwiftQL\/documentation\/SwiftQL\/Setting","doc:\/\/SwiftQL\/documentation\/SwiftQL\/Swift\/String","doc:\/\/SwiftQL\/documentation\/SwiftQL\/Update","doc:\/\/SwiftQL\/documentation\/SwiftQL\/VariableCaseElse","doc:\/\/SwiftQL\/documentation\/SwiftQL\/VariableCaseWhenThen","doc:\/\/SwiftQL\/documentation\/SwiftQL\/Where","doc:\/\/SwiftQL\/documentation\/SwiftQL\/XLBinaryOperatorExpression","doc:\/\/SwiftQL\/documentation\/SwiftQL\/XLColumnReference","doc:\/\/SwiftQL\/documentation\/SwiftQL\/XLColumnResult","doc:\/\/SwiftQL\/documentation\/SwiftQL\/XLConcatenationExpression","doc:\/\/SwiftQL\/documentation\/SwiftQL\/XLCreateTableAsStatement","doc:\/\/SwiftQL\/documentation\/SwiftQL\/XLCreateTableStatement","doc:\/\/SwiftQL\/documentation\/SwiftQL\/XLCreateTableStatementComponents","doc:\/\/SwiftQL\/documentation\/SwiftQL\/XLDeleteStatementComponents","doc:\/\/SwiftQL\/documentation\/SwiftQL\/XLDeleteTableStatement","doc:\/\/SwiftQL\/documentation\/SwiftQL\/XLDeleteWhereStatement","doc:\/\/SwiftQL\/documentation\/SwiftQL\/XLFromCommonTableDependency","doc:\/\/SwiftQL\/documentation\/SwiftQL\/XLFromSubqueryDependency","doc:\/\/SwiftQL\/documentation\/SwiftQL\/XLFromTableDependency","doc:\/\/SwiftQL\/documentation\/SwiftQL\/XLFunction","doc:\/\/SwiftQL\/documentation\/SwiftQL\/XLIfExpression","doc:\/\/SwiftQL\/documentation\/SwiftQL\/XLInTableExpression","doc:\/\/SwiftQL\/documentation\/SwiftQL\/XLInValueExpression","doc:\/\/SwiftQL\/documentation\/SwiftQL\/XLInsertSelectGroupByStatement","doc:\/\/SwiftQL\/documentation\/SwiftQL\/XLInsertSelectHavingStatement","doc:\/\/SwiftQL\/documentation\/SwiftQL\/XLInsertSelectLimitStatement","doc:\/\/SwiftQL\/documentation\/SwiftQL\/XLInsertSelectOffsetStatement","doc:\/\/SwiftQL\/documentation\/SwiftQL\/XLInsertSelectOrderByStatement","doc:\/\/SwiftQL\/documentation\/SwiftQL\/XLInsertSelectStatement","doc:\/\/SwiftQL\/documentation\/SwiftQL\/XLInsertSelectTableStatement","doc:\/\/SwiftQL\/documentation\/SwiftQL\/XLInsertSelectWhereStatement","doc:\/\/SwiftQL\/documentation\/SwiftQL\/XLInsertStatementComponents","doc:\/\/SwiftQL\/documentation\/SwiftQL\/XLInsertTableValuesStatement","doc:\/\/SwiftQL\/documentation\/SwiftQL\/XLName","doc:\/\/SwiftQL\/documentation\/SwiftQL\/XLNamedBindingReference","doc:\/\/SwiftQL\/documentation\/SwiftQL\/XLNullCoalesceExpression","doc:\/\/SwiftQL\/documentation\/SwiftQL\/XLPostfixOperatorExpression","doc:\/\/SwiftQL\/documentation\/SwiftQL\/XLPrefixOperatorExpression","doc:\/\/SwiftQL\/documentation\/SwiftQL\/XLQualifiedSelectColumnName","doc:\/\/SwiftQL\/documentation\/SwiftQL\/XLQualifiedTableAliasColumnName","doc:\/\/SwiftQL\/documentation\/SwiftQL\/XLQualifiedTableName","doc:\/\/SwiftQL\/documentation\/SwiftQL\/XLQueryGroupByStatement","doc:\/\/SwiftQL\/documentation\/SwiftQL\/XLQueryHavingStatement","doc:\/\/SwiftQL\/documentation\/SwiftQL\/XLQueryLimitStatement","doc:\/\/SwiftQL\/documentation\/SwiftQL\/XLQueryOffsetStatement","doc:\/\/SwiftQL\/documentation\/SwiftQL\/XLQueryOrderByStatement","doc:\/\/SwiftQL\/documentation\/SwiftQL\/XLQuerySelectStatement","doc:\/\/SwiftQL\/documentation\/SwiftQL\/XLQueryStatementComponents","doc:\/\/SwiftQL\/documentation\/SwiftQL\/XLQueryTableStatement","doc:\/\/SwiftQL\/documentation\/SwiftQL\/XLQueryUnionStatement","doc:\/\/SwiftQL\/documentation\/SwiftQL\/XLQueryWhereStatement","doc:\/\/SwiftQL\/documentation\/SwiftQL\/XLSchemaName","doc:\/\/SwiftQL\/documentation\/SwiftQL\/XLSelectResultDependency","doc:\/\/SwiftQL\/documentation\/SwiftQL\/XLSubqueryDependency","doc:\/\/SwiftQL\/documentation\/SwiftQL\/XLTableName","doc:\/\/SwiftQL\/documentation\/SwiftQL\/XLTypeAffinityExpression","doc:\/\/SwiftQL\/documentation\/SwiftQL\/XLTypeCastExpression","doc:\/\/SwiftQL\/documentation\/SwiftQL\/XLUnaryOperatorExpression","doc:\/\/SwiftQL\/documentation\/SwiftQL\/XLUnionDependency","doc:\/\/SwiftQL\/documentation\/SwiftQL\/XLUpdateFromStatement","doc:\/\/SwiftQL\/documentation\/SwiftQL\/XLUpdateFromTableDependency","doc:\/\/SwiftQL\/documentation\/SwiftQL\/XLUpdateSetStatement","doc:\/\/SwiftQL\/documentation\/SwiftQL\/XLUpdateStatementComponents","doc:\/\/SwiftQL\/documentation\/SwiftQL\/XLUpdateWhereStatement"],"kind":"relationships"}],"primaryContentSections":[{"declarations":[{"languages":["swift"],"tokens":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"XLEncodable","kind":"identifier"}],"platforms":["macOS"]}],"kind":"declarations"}],"hierarchy":{"paths":[["doc:\/\/SwiftQL\/documentation\/SwiftQL"]]},"abstract":[{"text":"Defines a type that can be transformed into an SQL expression.","type":"text"}],"schemaVersion":{"minor":3,"major":0,"patch":0},"sections":[],"kind":"symbol","references":{"doc://SwiftQL/documentation/SwiftQL/XLUnionDependency":{"abstract":[{"type":"text","text":"A table used in a UNION clause."}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"XLUnionDependency","kind":"identifier"}],"navigatorTitle":[{"text":"XLUnionDependency","kind":"identifier"}],"role":"symbol","identifier":"doc:\/\/SwiftQL\/documentation\/SwiftQL\/XLUnionDependency","type":"topic","kind":"symbol","url":"\/documentation\/swiftql\/xluniondependency","title":"XLUnionDependency"},"doc://SwiftQL/documentation/SwiftQL/XLUpdateSetStatement":{"url":"\/documentation\/swiftql\/xlupdatesetstatement","abstract":[{"text":"An update statement with a set clause.","type":"text"}],"kind":"symbol","role":"symbol","identifier":"doc:\/\/SwiftQL\/documentation\/SwiftQL\/XLUpdateSetStatement","navigatorTitle":[{"text":"XLUpdateSetStatement","kind":"identifier"}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"XLUpdateSetStatement"}],"type":"topic","title":"XLUpdateSetStatement"},"doc://SwiftQL/documentation/SwiftQL/XLQualifiedTableName":{"url":"\/documentation\/swiftql\/xlqualifiedtablename","abstract":[{"text":"A qualified name of a table.","type":"text"}],"kind":"symbol","role":"symbol","identifier":"doc:\/\/SwiftQL\/documentation\/SwiftQL\/XLQualifiedTableName","navigatorTitle":[{"kind":"identifier","text":"XLQualifiedTableName"}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"XLQualifiedTableName"}],"type":"topic","title":"XLQualifiedTableName"},"doc://SwiftQL/documentation/SwiftQL/XLQueryWhereStatement":{"title":"XLQueryWhereStatement","identifier":"doc:\/\/SwiftQL\/documentation\/SwiftQL\/XLQueryWhereStatement","abstract":[{"text":"A select query statement with a where clause.","type":"text"}],"url":"\/documentation\/swiftql\/xlquerywherestatement","type":"topic","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"XLQueryWhereStatement","kind":"identifier"}],"kind":"symbol","role":"symbol","navigatorTitle":[{"text":"XLQueryWhereStatement","kind":"identifier"}]},"doc://SwiftQL/documentation/SwiftQL/XLCreateStatement":{"role":"symbol","url":"\/documentation\/swiftql\/xlcreatestatement","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"XLCreateStatement","kind":"identifier"}],"title":"XLCreateStatement","identifier":"doc:\/\/SwiftQL\/documentation\/SwiftQL\/XLCreateStatement","abstract":[{"type":"text","text":"A create table statement."}],"kind":"symbol","type":"topic","navigatorTitle":[{"text":"XLCreateStatement","kind":"identifier"}]},"doc://SwiftQL/documentation/SwiftQL/XLInsertSelectOffsetStatement":{"abstract":[{"text":"A select offset statement used in an insert statement.","type":"text"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"XLInsertSelectOffsetStatement","kind":"identifier"}],"navigatorTitle":[{"text":"XLInsertSelectOffsetStatement","kind":"identifier"}],"role":"symbol","identifier":"doc:\/\/SwiftQL\/documentation\/SwiftQL\/XLInsertSelectOffsetStatement","kind":"symbol","url":"\/documentation\/swiftql\/xlinsertselectoffsetstatement","type":"topic","title":"XLInsertSelectOffsetStatement"},"doc://SwiftQL/documentation/SwiftQL/XLEncodable/unwrapSQL(context:builder:)":{"abstract":[{"text":"Wraps an SQL expression.","type":"text"}],"fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"unwrapSQL","kind":"identifier"},{"text":"(","kind":"text"},{"text":"context","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"inout","kind":"keyword"},{"text":" any ","kind":"text"},{"text":"XLBuilder","preciseIdentifier":"s:7SwiftQL9XLBuilderP","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"builder","kind":"externalParam"},{"text":": (","kind":"text"},{"text":"inout","kind":"keyword"},{"text":" any ","kind":"text"},{"text":"XLBuilder","preciseIdentifier":"s:7SwiftQL9XLBuilderP","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Void","preciseIdentifier":"s:s4Voida","kind":"typeIdentifier"},{"text":")","kind":"text"}],"required":true,"role":"symbol","identifier":"doc:\/\/SwiftQL\/documentation\/SwiftQL\/XLEncodable\/unwrapSQL(context:builder:)","kind":"symbol","url":"\/documentation\/swiftql\/xlencodable\/unwrapsql(context:builder:)","type":"topic","defaultImplementations":1,"title":"unwrapSQL(context:builder:)"},"doc://SwiftQL/documentation/SwiftQL/GroupBy":{"identifier":"doc:\/\/SwiftQL\/documentation\/SwiftQL\/GroupBy","title":"GroupBy","abstract":[{"text":"GroupBy clause.","type":"text"}],"url":"\/documentation\/swiftql\/groupby","type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"GroupBy","kind":"identifier"}],"kind":"symbol","role":"symbol","navigatorTitle":[{"text":"GroupBy","kind":"identifier"}]},"doc://SwiftQL/documentation/SwiftQL/XLRowWritable":{"type":"topic","role":"symbol","title":"XLRowWritable","url":"\/documentation\/swiftql\/xlrowwritable","abstract":[{"text":"An ","type":"text"},{"type":"codeVoice","code":"XLEncodable"},{"text":" type that can be written to a database.","type":"text"}],"navigatorTitle":[{"text":"XLRowWritable","kind":"identifier"}],"identifier":"doc:\/\/SwiftQL\/documentation\/SwiftQL\/XLRowWritable","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"XLRowWritable","kind":"identifier"}],"kind":"symbol"},"doc://SwiftQL/documentation/SwiftQL/XLQueryOrderByStatement":{"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"XLQueryOrderByStatement","kind":"identifier"}],"navigatorTitle":[{"text":"XLQueryOrderByStatement","kind":"identifier"}],"url":"\/documentation\/swiftql\/xlqueryorderbystatement","type":"topic","identifier":"doc:\/\/SwiftQL\/documentation\/SwiftQL\/XLQueryOrderByStatement","kind":"symbol","title":"XLQueryOrderByStatement","abstract":[{"text":"A select query with an order-by clause.","type":"text"}],"role":"symbol"},"doc://SwiftQL/documentation/SwiftQL/XLUpdateStatement":{"abstract":[{"text":"An update statement.","type":"text"}],"url":"\/documentation\/swiftql\/xlupdatestatement","kind":"symbol","type":"topic","identifier":"doc:\/\/SwiftQL\/documentation\/SwiftQL\/XLUpdateStatement","title":"XLUpdateStatement","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"XLUpdateStatement","kind":"identifier"}],"role":"symbol","navigatorTitle":[{"text":"XLUpdateStatement","kind":"identifier"}]},"doc://SwiftQL/documentation/SwiftQL":{"abstract":[{"text":"Write SQL using familiar type-safe Swift syntax.","type":"text"}],"role":"collection","identifier":"doc:\/\/SwiftQL\/documentation\/SwiftQL","type":"topic","url":"\/documentation\/swiftql","kind":"symbol","title":"SwiftQL"},"doc://SwiftQL/documentation/SwiftQL/Where":{"abstract":[{"text":"Where clause.","type":"text"}],"url":"\/documentation\/swiftql\/where","kind":"symbol","type":"topic","identifier":"doc:\/\/SwiftQL\/documentation\/SwiftQL\/Where","title":"Where","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Where","kind":"identifier"}],"role":"symbol","navigatorTitle":[{"text":"Where","kind":"identifier"}]},"doc://SwiftQL/documentation/SwiftQL/XLMetaNamedResult":{"identifier":"doc:\/\/SwiftQL\/documentation\/SwiftQL\/XLMetaNamedResult","title":"XLMetaNamedResult","abstract":[{"text":"Metadata for a ","type":"text"},{"type":"codeVoice","code":"@SQLTable"},{"text":" or ","type":"text"},{"type":"codeVoice","code":"@SQLResult"},{"text":" struct where the struct is used as a table with a given","type":"text"},{"text":" ","type":"text"},{"text":"name in a query.","type":"text"}],"url":"\/documentation\/swiftql\/xlmetanamedresult","type":"topic","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"XLMetaNamedResult","kind":"identifier"}],"kind":"symbol","role":"symbol","navigatorTitle":[{"text":"XLMetaNamedResult","kind":"identifier"}]},"doc://SwiftQL/documentation/SwiftQL/Create":{"url":"\/documentation\/swiftql\/create","kind":"symbol","type":"topic","abstract":[{"text":"Create statement.","type":"text"}],"role":"symbol","identifier":"doc:\/\/SwiftQL\/documentation\/SwiftQL\/Create","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Create","kind":"identifier"}],"navigatorTitle":[{"text":"Create","kind":"identifier"}],"title":"Create"},"doc://SwiftQL/documentation/SwiftQL/XLPostfixOperatorExpression":{"abstract":[{"text":"Postfix operator.","type":"text"}],"url":"\/documentation\/swiftql\/xlpostfixoperatorexpression","kind":"symbol","type":"topic","identifier":"doc:\/\/SwiftQL\/documentation\/SwiftQL\/XLPostfixOperatorExpression","title":"XLPostfixOperatorExpression","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"XLPostfixOperatorExpression","kind":"identifier"}],"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"XLPostfixOperatorExpression"}]},"doc://SwiftQL/documentation/SwiftQL/ConstantCaseWhenThenElse":{"kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"ConstantCaseWhenThenElse"}],"type":"topic","role":"symbol","identifier":"doc:\/\/SwiftQL\/documentation\/SwiftQL\/ConstantCaseWhenThenElse","title":"ConstantCaseWhenThenElse","url":"\/documentation\/swiftql\/constantcasewhenthenelse","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ConstantCaseWhenThenElse","kind":"identifier"}],"abstract":[]},"doc://SwiftQL/documentation/SwiftQL/XLInsertSelectHavingStatement":{"abstract":[{"text":"An insert … having statement used in an insert statement.","type":"text"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"XLInsertSelectHavingStatement","kind":"identifier"}],"navigatorTitle":[{"text":"XLInsertSelectHavingStatement","kind":"identifier"}],"role":"symbol","identifier":"doc:\/\/SwiftQL\/documentation\/SwiftQL\/XLInsertSelectHavingStatement","type":"topic","url":"\/documentation\/swiftql\/xlinsertselecthavingstatement","kind":"symbol","title":"XLInsertSelectHavingStatement"},"doc://SwiftQL/documentation/SwiftQL/Ascending":{"abstract":[{"type":"text","text":"Ascending ordering term used in an OrderBy expression."}],"identifier":"doc:\/\/SwiftQL\/documentation\/SwiftQL\/Ascending","role":"symbol","navigatorTitle":[{"text":"Ascending","kind":"identifier"}],"url":"\/documentation\/swiftql\/ascending","kind":"symbol","type":"topic","title":"Ascending","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Ascending","kind":"identifier"}]},"doc://SwiftQL/documentation/SwiftQL/XLOrderingTerm":{"abstract":[{"type":"text","text":"An ordering term such as ascending or descending."}],"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"XLOrderingTerm","kind":"identifier"}],"navigatorTitle":[{"text":"XLOrderingTerm","kind":"identifier"}],"role":"symbol","identifier":"doc:\/\/SwiftQL\/documentation\/SwiftQL\/XLOrderingTerm","kind":"symbol","url":"\/documentation\/swiftql\/xlorderingterm","type":"topic","title":"XLOrderingTerm"},"doc://SwiftQL/documentation/SwiftQL/SQLScalarResult/MetaCreate":{"url":"\/documentation\/swiftql\/sqlscalarresult\/metacreate","abstract":[],"kind":"symbol","role":"symbol","identifier":"doc:\/\/SwiftQL\/documentation\/SwiftQL\/SQLScalarResult\/MetaCreate","navigatorTitle":[{"text":"MetaCreate","kind":"identifier"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"MetaCreate","kind":"identifier"}],"type":"topic","title":"SQLScalarResult.MetaCreate","conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"type":"codeVoice","code":"T"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"XLExpression"},{"text":" and ","type":"text"},{"code":"XLLiteral","type":"codeVoice"},{"type":"text","text":"."}]}},"doc://SwiftQL/documentation/SwiftQL/XLSchemaName":{"type":"topic","role":"symbol","title":"XLSchemaName","abstract":[{"type":"text","text":"A name of a schema used in a SwiftQL expression."}],"url":"\/documentation\/swiftql\/xlschemaname","navigatorTitle":[{"text":"XLSchemaName","kind":"identifier"}],"identifier":"doc:\/\/SwiftQL\/documentation\/SwiftQL\/XLSchemaName","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"XLSchemaName","kind":"identifier"}],"kind":"symbol"},"doc://SwiftQL/documentation/SwiftQL/XLMetaCreate":{"abstract":[{"text":"Metadata for a ","type":"text"},{"type":"codeVoice","code":"@SQLTable"},{"type":"text","text":" struct where the struct is used in a CREATE statement."}],"identifier":"doc:\/\/SwiftQL\/documentation\/SwiftQL\/XLMetaCreate","role":"symbol","navigatorTitle":[{"text":"XLMetaCreate","kind":"identifier"}],"url":"\/documentation\/swiftql\/xlmetacreate","kind":"symbol","type":"topic","title":"XLMetaCreate","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"XLMetaCreate","kind":"identifier"}]},"doc://SwiftQL/documentation/SwiftQL/XLInsertStatementComponents":{"title":"XLInsertStatementComponents","navigatorTitle":[{"text":"XLInsertStatementComponents","kind":"identifier"}],"type":"topic","url":"\/documentation\/swiftql\/xlinsertstatementcomponents","role":"symbol","kind":"symbol","identifier":"doc:\/\/SwiftQL\/documentation\/SwiftQL\/XLInsertStatementComponents","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"XLInsertStatementComponents","kind":"identifier"}],"abstract":[{"text":"Builder used to construct insert statements.","type":"text"}]},"doc://SwiftQL/documentation/SwiftQL/Update":{"identifier":"doc:\/\/SwiftQL\/documentation\/SwiftQL\/Update","title":"Update","abstract":[{"text":"Update statement.","type":"text"}],"url":"\/documentation\/swiftql\/update","type":"topic","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Update"}],"kind":"symbol","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"Update"}]},"doc://SwiftQL/documentation/SwiftQL/XLFromTableDependency":{"abstract":[{"text":"A table used in a FROM clause in a select query.","type":"text"}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"XLFromTableDependency"}],"navigatorTitle":[{"text":"XLFromTableDependency","kind":"identifier"}],"role":"symbol","identifier":"doc:\/\/SwiftQL\/documentation\/SwiftQL\/XLFromTableDependency","type":"topic","url":"\/documentation\/swiftql\/xlfromtabledependency","kind":"symbol","title":"XLFromTableDependency"},"doc://SwiftQL/documentation/SwiftQL/Foundation/Data":{"abstract":[{"text":"Adds support for ","type":"text"},{"type":"codeVoice","code":"Data"},{"type":"text","text":" types to be used as SwiftQL columns."}],"fragments":[{"text":"extension","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Data","preciseIdentifier":"s:10Foundation4DataV","kind":"identifier"}],"navigatorTitle":[{"text":"Data","kind":"identifier"}],"role":"symbol","identifier":"doc:\/\/SwiftQL\/documentation\/SwiftQL\/Foundation\/Data","kind":"symbol","url":"\/documentation\/swiftql\/foundation\/data","type":"topic","title":"Data"},"doc://SwiftQL/documentation/SwiftQL/XLPrefixOperatorExpression":{"identifier":"doc:\/\/SwiftQL\/documentation\/SwiftQL\/XLPrefixOperatorExpression","kind":"symbol","type":"topic","abstract":[{"text":"Prefix operator.","type":"text"}],"title":"XLPrefixOperatorExpression","navigatorTitle":[{"text":"XLPrefixOperatorExpression","kind":"identifier"}],"url":"\/documentation\/swiftql\/xlprefixoperatorexpression","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"XLPrefixOperatorExpression","kind":"identifier"}],"role":"symbol"},"doc://SwiftQL/documentation/SwiftQL/XLMetaInsert":{"type":"topic","role":"symbol","title":"XLMetaInsert","url":"\/documentation\/swiftql\/xlmetainsert","abstract":[{"type":"text","text":"Metadata for a "},{"type":"codeVoice","code":"@SQLTable"},{"type":"text","text":" struct where the struct is used in an INSERT statement."}],"navigatorTitle":[{"text":"XLMetaInsert","kind":"identifier"}],"identifier":"doc:\/\/SwiftQL\/documentation\/SwiftQL\/XLMetaInsert","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"XLMetaInsert","kind":"identifier"}],"kind":"symbol"},"doc://SwiftQL/documentation/SwiftQL/XLTableName":{"url":"\/documentation\/swiftql\/xltablename","abstract":[{"type":"text","text":"A name of a table used in a SwiftQL expression."}],"kind":"symbol","role":"symbol","identifier":"doc:\/\/SwiftQL\/documentation\/SwiftQL\/XLTableName","navigatorTitle":[{"kind":"identifier","text":"XLTableName"}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"XLTableName"}],"type":"topic","title":"XLTableName"},"doc://SwiftQL/documentation/SwiftQL/VariableCaseElse":{"identifier":"doc:\/\/SwiftQL\/documentation\/SwiftQL\/VariableCaseElse","kind":"symbol","type":"topic","abstract":[],"title":"VariableCaseElse","navigatorTitle":[{"kind":"identifier","text":"VariableCaseElse"}],"url":"\/documentation\/swiftql\/variablecaseelse","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"VariableCaseElse"}],"role":"symbol"},"doc://SwiftQL/documentation/SwiftQL/SQLScalarResult/MetaNullableNamedResult":{"kind":"symbol","navigatorTitle":[{"text":"MetaNullableNamedResult","kind":"identifier"}],"type":"topic","role":"symbol","identifier":"doc:\/\/SwiftQL\/documentation\/SwiftQL\/SQLScalarResult\/MetaNullableNamedResult","conformance":{"constraints":[{"type":"codeVoice","code":"T"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"XLExpression"},{"type":"text","text":" and "},{"type":"codeVoice","code":"XLLiteral"},{"type":"text","text":"."}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"availabilityPrefix":[{"type":"text","text":"Available when"}]},"title":"SQLScalarResult.MetaNullableNamedResult","url":"\/documentation\/swiftql\/sqlscalarresult\/metanullablenamedresult","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"MetaNullableNamedResult","kind":"identifier"}],"abstract":[]},"doc://SwiftQL/documentation/SwiftQL/XLEncodable/makeSQL(context:)":{"kind":"symbol","required":true,"role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"makeSQL","kind":"identifier"},{"kind":"text","text":"("},{"text":"context","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"inout","kind":"keyword"},{"text":" any ","kind":"text"},{"text":"XLBuilder","kind":"typeIdentifier","preciseIdentifier":"s:7SwiftQL9XLBuilderP"},{"text":")","kind":"text"}],"abstract":[{"type":"text","text":"Constructs an SQL expression at runtime."}],"defaultImplementations":7,"type":"topic","url":"\/documentation\/swiftql\/xlencodable\/makesql(context:)","title":"makeSQL(context:)","identifier":"doc:\/\/SwiftQL\/documentation\/SwiftQL\/XLEncodable\/makeSQL(context:)"},"doc://SwiftQL/documentation/SwiftQL/Delete":{"kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"Delete"}],"type":"topic","role":"symbol","identifier":"doc:\/\/SwiftQL\/documentation\/SwiftQL\/Delete","title":"Delete","url":"\/documentation\/swiftql\/delete","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Delete"}],"abstract":[{"text":"Delete statement.","type":"text"}]},"doc://SwiftQL/documentation/SwiftQL/XLInTableExpression":{"identifier":"doc:\/\/SwiftQL\/documentation\/SwiftQL\/XLInTableExpression","kind":"symbol","type":"topic","abstract":[{"text":"IN table expression.","type":"text"}],"title":"XLInTableExpression","navigatorTitle":[{"text":"XLInTableExpression","kind":"identifier"}],"url":"\/documentation\/swiftql\/xlintableexpression","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"XLInTableExpression","kind":"identifier"}],"role":"symbol"},"doc://SwiftQL/documentation/SwiftQL/Join":{"kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"Join"}],"type":"topic","role":"symbol","identifier":"doc:\/\/SwiftQL\/documentation\/SwiftQL\/Join","title":"Join","url":"\/documentation\/swiftql\/join","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Join"}],"abstract":[{"text":"Join clause.","type":"text"}]},"doc://SwiftQL/documentation/SwiftQL/XLQualifiedTableAliasColumnName":{"fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"XLQualifiedTableAliasColumnName","kind":"identifier"}],"navigatorTitle":[{"text":"XLQualifiedTableAliasColumnName","kind":"identifier"}],"url":"\/documentation\/swiftql\/xlqualifiedtablealiascolumnname","identifier":"doc:\/\/SwiftQL\/documentation\/SwiftQL\/XLQualifiedTableAliasColumnName","type":"topic","kind":"symbol","title":"XLQualifiedTableAliasColumnName","abstract":[{"text":"A qualified name of a table column.","type":"text"}],"role":"symbol"},"doc://SwiftQL/documentation/SwiftQL/Swift/Optional":{"abstract":[],"conformance":{"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"code":"Wrapped","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"code":"XLEncodable","type":"codeVoice"},{"text":".","type":"text"}]},"identifier":"doc:\/\/SwiftQL\/documentation\/SwiftQL\/Swift\/Optional","role":"symbol","navigatorTitle":[{"text":"Optional","kind":"identifier"}],"url":"\/documentation\/swiftql\/swift\/optional","kind":"symbol","type":"topic","title":"Optional","fragments":[{"kind":"keyword","text":"extension"},{"kind":"text","text":" "},{"kind":"identifier","text":"Optional","preciseIdentifier":"s:Sq"}]},"doc://SwiftQL/documentation/SwiftQL/XLComparable":{"abstract":[{"text":"A type of a value value which can be compared to another value of the same type for ordinality (greater","type":"text"},{"type":"text","text":" "},{"type":"text","text":"than, less than, greater than or equal to, less than or equal to)."}],"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"XLComparable","kind":"identifier"}],"navigatorTitle":[{"text":"XLComparable","kind":"identifier"}],"role":"symbol","identifier":"doc:\/\/SwiftQL\/documentation\/SwiftQL\/XLComparable","type":"topic","kind":"symbol","url":"\/documentation\/swiftql\/xlcomparable","title":"XLComparable"},"doc://SwiftQL/documentation/SwiftQL/XLCreateTableStatement":{"url":"\/documentation\/swiftql\/xlcreatetablestatement","abstract":[{"type":"text","text":"Create table statement."}],"kind":"symbol","role":"symbol","identifier":"doc:\/\/SwiftQL\/documentation\/SwiftQL\/XLCreateTableStatement","navigatorTitle":[{"text":"XLCreateTableStatement","kind":"identifier"}],"fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"XLCreateTableStatement"}],"type":"topic","title":"XLCreateTableStatement"},"doc://SwiftQL/documentation/SwiftQL/XLNamedBindingReference":{"abstract":[{"text":"A variable used in an expression that is referred to by a given name.","type":"text"}],"url":"\/documentation\/swiftql\/xlnamedbindingreference","kind":"symbol","type":"topic","identifier":"doc:\/\/SwiftQL\/documentation\/SwiftQL\/XLNamedBindingReference","title":"XLNamedBindingReference","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"XLNamedBindingReference","kind":"identifier"}],"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"XLNamedBindingReference"}]},"doc://SwiftQL/documentation/SwiftQL/XLQueryStatement":{"kind":"symbol","navigatorTitle":[{"text":"XLQueryStatement","kind":"identifier"}],"type":"topic","role":"symbol","identifier":"doc:\/\/SwiftQL\/documentation\/SwiftQL\/XLQueryStatement","title":"XLQueryStatement","url":"\/documentation\/swiftql\/xlquerystatement","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"XLQueryStatement"}],"abstract":[{"type":"text","text":"A select query statement."}]},"doc://SwiftQL/documentation/SwiftQL/XLUnaryOperatorExpression":{"abstract":[{"type":"text","text":"Unary operator."}],"identifier":"doc:\/\/SwiftQL\/documentation\/SwiftQL\/XLUnaryOperatorExpression","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"XLUnaryOperatorExpression"}],"kind":"symbol","url":"\/documentation\/swiftql\/xlunaryoperatorexpression","type":"topic","title":"XLUnaryOperatorExpression","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"XLUnaryOperatorExpression"}]},"doc://SwiftQL/documentation/SwiftQL/XLTypeCastExpression":{"abstract":[{"type":"text","text":"Type case expression."}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"XLTypeCastExpression","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"XLTypeCastExpression"}],"role":"symbol","identifier":"doc:\/\/SwiftQL\/documentation\/SwiftQL\/XLTypeCastExpression","kind":"symbol","url":"\/documentation\/swiftql\/xltypecastexpression","type":"topic","title":"XLTypeCastExpression"},"doc://SwiftQL/documentation/SwiftQL/Limit":{"kind":"symbol","navigatorTitle":[{"text":"Limit","kind":"identifier"}],"type":"topic","role":"symbol","identifier":"doc:\/\/SwiftQL\/documentation\/SwiftQL\/Limit","title":"Limit","url":"\/documentation\/swiftql\/limit","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Limit","kind":"identifier"}],"abstract":[{"type":"text","text":"Limit clause."}]},"doc://SwiftQL/documentation/SwiftQL/SQLScalarResult/MetaWritableTable":{"abstract":[],"conformance":{"constraints":[{"type":"codeVoice","code":"T"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"XLExpression"},{"type":"text","text":" and "},{"type":"codeVoice","code":"XLLiteral"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"identifier":"doc:\/\/SwiftQL\/documentation\/SwiftQL\/SQLScalarResult\/MetaWritableTable","role":"symbol","navigatorTitle":[{"text":"MetaWritableTable","kind":"identifier"}],"url":"\/documentation\/swiftql\/sqlscalarresult\/metawritabletable","kind":"symbol","type":"topic","title":"SQLScalarResult.MetaWritableTable","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"MetaWritableTable","kind":"identifier"}]},"doc://SwiftQL/documentation/SwiftQL/XLInsertSelectLimitStatement":{"identifier":"doc:\/\/SwiftQL\/documentation\/SwiftQL\/XLInsertSelectLimitStatement","title":"XLInsertSelectLimitStatement","abstract":[{"type":"text","text":"A select limit statement used in an insert statement."}],"url":"\/documentation\/swiftql\/xlinsertselectlimitstatement","type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"XLInsertSelectLimitStatement"}],"kind":"symbol","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"XLInsertSelectLimitStatement"}]},"doc://SwiftQL/documentation/SwiftQL/XLDeleteStatementComponents":{"identifier":"doc:\/\/SwiftQL\/documentation\/SwiftQL\/XLDeleteStatementComponents","type":"topic","abstract":[{"text":"Builder that is used to construct a delete statement.","type":"text"}],"url":"\/documentation\/swiftql\/xldeletestatementcomponents","title":"XLDeleteStatementComponents","kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"XLDeleteStatementComponents","kind":"identifier"}],"navigatorTitle":[{"text":"XLDeleteStatementComponents","kind":"identifier"}],"role":"symbol"},"doc://SwiftQL/documentation/SwiftQL/SQLScalarResult/MetaUpdate":{"conformance":{"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"type":"codeVoice","code":"T"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"XLExpression"},{"text":" and ","type":"text"},{"type":"codeVoice","code":"XLLiteral"},{"text":".","type":"text"}]},"identifier":"doc:\/\/SwiftQL\/documentation\/SwiftQL\/SQLScalarResult\/MetaUpdate","title":"SQLScalarResult.MetaUpdate","abstract":[],"url":"\/documentation\/swiftql\/sqlscalarresult\/metaupdate","type":"topic","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"MetaUpdate"}],"kind":"symbol","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"MetaUpdate"}]},"doc://SwiftQL/documentation/SwiftQL/XLColumnReference":{"abstract":[{"text":"Expression that refers to a table column.","type":"text"}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"XLColumnReference"}],"navigatorTitle":[{"text":"XLColumnReference","kind":"identifier"}],"role":"symbol","identifier":"doc:\/\/SwiftQL\/documentation\/SwiftQL\/XLColumnReference","kind":"symbol","url":"\/documentation\/swiftql\/xlcolumnreference","type":"topic","title":"XLColumnReference"},"doc://SwiftQL/documentation/SwiftQL/XLMetaResult":{"url":"\/documentation\/swiftql\/xlmetaresult","abstract":[{"type":"text","text":"Metadata for a "},{"type":"codeVoice","code":"@SQLTable"},{"type":"text","text":" or "},{"type":"codeVoice","code":"@SQLResult"},{"type":"text","text":" struct where the struct is used as a normal table in a"},{"type":"text","text":" "},{"type":"text","text":"query."}],"kind":"symbol","role":"symbol","identifier":"doc:\/\/SwiftQL\/documentation\/SwiftQL\/XLMetaResult","navigatorTitle":[{"kind":"identifier","text":"XLMetaResult"}],"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"XLMetaResult"}],"type":"topic","title":"XLMetaResult"},"doc://SwiftQL/documentation/SwiftQL/XLFunction":{"identifier":"doc:\/\/SwiftQL\/documentation\/SwiftQL\/XLFunction","title":"XLFunction","abstract":[{"text":"A function that is called in an expression.","type":"text"}],"url":"\/documentation\/swiftql\/xlfunction","type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"XLFunction"}],"kind":"symbol","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"XLFunction"}]},"doc://SwiftQL/documentation/SwiftQL/SQLScalarResult/MetaNullableResult":{"conformance":{"constraints":[{"type":"codeVoice","code":"T"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"XLExpression"},{"text":" and ","type":"text"},{"type":"codeVoice","code":"XLLiteral"},{"text":".","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}]},"identifier":"doc:\/\/SwiftQL\/documentation\/SwiftQL\/SQLScalarResult\/MetaNullableResult","title":"SQLScalarResult.MetaNullableResult","abstract":[],"url":"\/documentation\/swiftql\/sqlscalarresult\/metanullableresult","type":"topic","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"MetaNullableResult","kind":"identifier"}],"kind":"symbol","role":"symbol","navigatorTitle":[{"text":"MetaNullableResult","kind":"identifier"}]},"doc://SwiftQL/documentation/SwiftQL/Swift/Bool":{"identifier":"doc:\/\/SwiftQL\/documentation\/SwiftQL\/Swift\/Bool","kind":"symbol","type":"topic","abstract":[{"type":"text","text":"Adds support for "},{"type":"codeVoice","code":"Bool"},{"text":" types to be used as SwiftQL columns.","type":"text"}],"title":"Bool","navigatorTitle":[{"kind":"identifier","text":"Bool"}],"url":"\/documentation\/swiftql\/swift\/bool","fragments":[{"text":"extension","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","preciseIdentifier":"s:Sb","text":"Bool"}],"role":"symbol"},"doc://SwiftQL/documentation/SwiftQL/XLCustomFunction":{"kind":"symbol","abstract":[],"type":"topic","url":"\/documentation\/swiftql\/xlcustomfunction","title":"XLCustomFunction","identifier":"doc:\/\/SwiftQL\/documentation\/SwiftQL\/XLCustomFunction","navigatorTitle":[{"text":"XLCustomFunction","kind":"identifier"}],"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"XLCustomFunction"}],"role":"symbol"},"doc://SwiftQL/documentation/SwiftQL/XLQualifiedName":{"url":"\/documentation\/swiftql\/xlqualifiedname","kind":"symbol","type":"topic","abstract":[{"type":"text","text":"A qualified name used in a SwiftQL expression, such as the name of a column on a table."}],"role":"symbol","identifier":"doc:\/\/SwiftQL\/documentation\/SwiftQL\/XLQualifiedName","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"XLQualifiedName","kind":"identifier"}],"navigatorTitle":[{"text":"XLQualifiedName","kind":"identifier"}],"title":"XLQualifiedName"},"doc://SwiftQL/documentation/SwiftQL/XLName":{"identifier":"doc:\/\/SwiftQL\/documentation\/SwiftQL\/XLName","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"XLName","kind":"identifier"}],"navigatorTitle":[{"text":"XLName","kind":"identifier"}],"abstract":[{"type":"text","text":"A name used in a SwiftQL expression."}],"type":"topic","url":"\/documentation\/swiftql\/xlname","title":"XLName","kind":"symbol"},"doc://SwiftQL/documentation/SwiftQL/XLSimpleSelectQueryStatement":{"abstract":[{"type":"text","text":"A query statement that can be combined with another query statement."}],"identifier":"doc:\/\/SwiftQL\/documentation\/SwiftQL\/XLSimpleSelectQueryStatement","role":"symbol","navigatorTitle":[{"text":"XLSimpleSelectQueryStatement","kind":"identifier"}],"url":"\/documentation\/swiftql\/xlsimpleselectquerystatement","kind":"symbol","type":"topic","title":"XLSimpleSelectQueryStatement","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"XLSimpleSelectQueryStatement","kind":"identifier"}]},"doc://SwiftQL/documentation/SwiftQL/XLEquatable":{"url":"\/documentation\/swiftql\/xlequatable","kind":"symbol","type":"topic","abstract":[{"type":"text","text":"A type of a value which can be compared to another value of the same type for equivalence."}],"role":"symbol","identifier":"doc:\/\/SwiftQL\/documentation\/SwiftQL\/XLEquatable","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"XLEquatable","kind":"identifier"}],"navigatorTitle":[{"text":"XLEquatable","kind":"identifier"}],"title":"XLEquatable"},"doc://SwiftQL/documentation/SwiftQL/Insert":{"abstract":[{"text":"Insert statement.","type":"text"}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"Insert","kind":"identifier"}],"navigatorTitle":[{"text":"Insert","kind":"identifier"}],"role":"symbol","identifier":"doc:\/\/SwiftQL\/documentation\/SwiftQL\/Insert","kind":"symbol","url":"\/documentation\/swiftql\/insert","type":"topic","title":"Insert"},"doc://SwiftQL/documentation/SwiftQL/XLInsertSelectOrderByStatement":{"url":"\/documentation\/swiftql\/xlinsertselectorderbystatement","abstract":[{"type":"text","text":"A select order-by statement used in an insert statement."}],"kind":"symbol","role":"symbol","identifier":"doc:\/\/SwiftQL\/documentation\/SwiftQL\/XLInsertSelectOrderByStatement","navigatorTitle":[{"text":"XLInsertSelectOrderByStatement","kind":"identifier"}],"fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"XLInsertSelectOrderByStatement","kind":"identifier"}],"type":"topic","title":"XLInsertSelectOrderByStatement"},"doc://SwiftQL/documentation/SwiftQL/SQLScalarResult/MetaNamedResult":{"abstract":[],"conformance":{"constraints":[{"code":"T","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"code":"XLExpression","type":"codeVoice"},{"text":" and ","type":"text"},{"code":"XLLiteral","type":"codeVoice"},{"text":".","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}]},"identifier":"doc:\/\/SwiftQL\/documentation\/SwiftQL\/SQLScalarResult\/MetaNamedResult","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"MetaNamedResult"}],"kind":"symbol","url":"\/documentation\/swiftql\/sqlscalarresult\/metanamedresult","type":"topic","title":"SQLScalarResult.MetaNamedResult","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"MetaNamedResult"}]},"doc://SwiftQL/documentation/SwiftQL/XLQueryHavingStatement":{"abstract":[{"text":"A select query with a group-by having clause.","type":"text"}],"identifier":"doc:\/\/SwiftQL\/documentation\/SwiftQL\/XLQueryHavingStatement","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"XLQueryHavingStatement"}],"url":"\/documentation\/swiftql\/xlqueryhavingstatement","kind":"symbol","type":"topic","title":"XLQueryHavingStatement","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"XLQueryHavingStatement"}]},"doc://SwiftQL/documentation/SwiftQL/XLDeleteWhereStatement":{"identifier":"doc:\/\/SwiftQL\/documentation\/SwiftQL\/XLDeleteWhereStatement","kind":"symbol","type":"topic","abstract":[{"type":"text","text":"Where clause on a delete statement."}],"title":"XLDeleteWhereStatement","navigatorTitle":[{"kind":"identifier","text":"XLDeleteWhereStatement"}],"url":"\/documentation\/swiftql\/xldeletewherestatement","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"XLDeleteWhereStatement"}],"role":"symbol"},"doc://SwiftQL/documentation/SwiftQL/XLUpdateWhereStatement":{"type":"topic","role":"symbol","title":"XLUpdateWhereStatement","url":"\/documentation\/swiftql\/xlupdatewherestatement","abstract":[{"text":"An update statement with a where clause.","type":"text"}],"navigatorTitle":[{"text":"XLUpdateWhereStatement","kind":"identifier"}],"identifier":"doc:\/\/SwiftQL\/documentation\/SwiftQL\/XLUpdateWhereStatement","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"XLUpdateWhereStatement","kind":"identifier"}],"kind":"symbol"},"doc://SwiftQL/documentation/SwiftQL/ConstantCaseWhenThen":{"identifier":"doc:\/\/SwiftQL\/documentation\/SwiftQL\/ConstantCaseWhenThen","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"ConstantCaseWhenThen"}],"navigatorTitle":[{"kind":"identifier","text":"ConstantCaseWhenThen"}],"abstract":[{"text":"A complete case\/when\/then expression.","type":"text"}],"type":"topic","url":"\/documentation\/swiftql\/constantcasewhenthen","title":"ConstantCaseWhenThen","kind":"symbol"},"doc://SwiftQL/documentation/SwiftQL/XLCreateTableStatementComponents":{"abstract":[{"text":"Builder used to construct a create statement.","type":"text"}],"kind":"symbol","url":"\/documentation\/swiftql\/xlcreatetablestatementcomponents","type":"topic","identifier":"doc:\/\/SwiftQL\/documentation\/SwiftQL\/XLCreateTableStatementComponents","title":"XLCreateTableStatementComponents","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"XLCreateTableStatementComponents"}],"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"XLCreateTableStatementComponents"}]},"doc://SwiftQL/documentation/SwiftQL/SQLScalarResult/MetaInsert":{"type":"topic","role":"symbol","title":"SQLScalarResult.MetaInsert","url":"\/documentation\/swiftql\/sqlscalarresult\/metainsert","abstract":[],"navigatorTitle":[{"text":"MetaInsert","kind":"identifier"}],"identifier":"doc:\/\/SwiftQL\/documentation\/SwiftQL\/SQLScalarResult\/MetaInsert","conformance":{"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"code":"T","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"code":"XLExpression","type":"codeVoice"},{"text":" and ","type":"text"},{"code":"XLLiteral","type":"codeVoice"},{"text":".","type":"text"}]},"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"MetaInsert","kind":"identifier"}],"kind":"symbol"},"doc://SwiftQL/documentation/SwiftQL/XLQueryOffsetStatement":{"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"XLQueryOffsetStatement","kind":"identifier"}],"navigatorTitle":[{"text":"XLQueryOffsetStatement","kind":"identifier"}],"url":"\/documentation\/swiftql\/xlqueryoffsetstatement","type":"topic","identifier":"doc:\/\/SwiftQL\/documentation\/SwiftQL\/XLQueryOffsetStatement","kind":"symbol","title":"XLQueryOffsetStatement","abstract":[{"type":"text","text":"A select query with an offset clause."}],"role":"symbol"},"doc://SwiftQL/documentation/SwiftQL/XLBindingReference":{"kind":"symbol","navigatorTitle":[{"text":"XLBindingReference","kind":"identifier"}],"type":"topic","role":"symbol","identifier":"doc:\/\/SwiftQL\/documentation\/SwiftQL\/XLBindingReference","title":"XLBindingReference","url":"\/documentation\/swiftql\/xlbindingreference","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"text":"XLBindingReference","kind":"identifier"}],"abstract":[{"text":"Reference to a variable used in an expression.","type":"text"}]},"doc://SwiftQL/documentation/SwiftQL/Setting":{"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"Setting","kind":"identifier"}],"navigatorTitle":[{"text":"Setting","kind":"identifier"}],"url":"\/documentation\/swiftql\/setting","identifier":"doc:\/\/SwiftQL\/documentation\/SwiftQL\/Setting","type":"topic","kind":"symbol","title":"Setting","abstract":[{"text":"Setting clause.","type":"text"}],"role":"symbol"},"doc://SwiftQL/documentation/SwiftQL/SQLScalarResult/MetaCreateAs":{"identifier":"doc:\/\/SwiftQL\/documentation\/SwiftQL\/SQLScalarResult\/MetaCreateAs","kind":"symbol","conformance":{"conformancePrefix":[{"text":"Conforms when","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}],"constraints":[{"type":"codeVoice","code":"T"},{"type":"text","text":" conforms to "},{"code":"XLExpression","type":"codeVoice"},{"type":"text","text":" and "},{"code":"XLLiteral","type":"codeVoice"},{"text":".","type":"text"}]},"type":"topic","abstract":[],"title":"SQLScalarResult.MetaCreateAs","navigatorTitle":[{"kind":"identifier","text":"MetaCreateAs"}],"url":"\/documentation\/swiftql\/sqlscalarresult\/metacreateas","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"MetaCreateAs","kind":"identifier"}],"role":"symbol"},"doc://SwiftQL/documentation/SwiftQL/Swift/String":{"url":"\/documentation\/swiftql\/swift\/string","abstract":[{"type":"text","text":"Adds support for "},{"code":"String","type":"codeVoice"},{"type":"text","text":" types to be used as SwiftQL columns."}],"kind":"symbol","role":"symbol","identifier":"doc:\/\/SwiftQL\/documentation\/SwiftQL\/Swift\/String","navigatorTitle":[{"text":"String","kind":"identifier"}],"fragments":[{"kind":"keyword","text":"extension"},{"text":" ","kind":"text"},{"text":"String","preciseIdentifier":"s:SS","kind":"identifier"}],"type":"topic","title":"String"},"doc://SwiftQL/documentation/SwiftQL/XLInsertTableValuesStatement":{"title":"XLInsertTableValuesStatement","navigatorTitle":[{"text":"XLInsertTableValuesStatement","kind":"identifier"}],"type":"topic","url":"\/documentation\/swiftql\/xlinserttablevaluesstatement","role":"symbol","kind":"symbol","identifier":"doc:\/\/SwiftQL\/documentation\/SwiftQL\/XLInsertTableValuesStatement","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"XLInsertTableValuesStatement","kind":"identifier"}],"abstract":[{"text":"Values clause for an insert statement.","type":"text"}]},"doc://SwiftQL/documentation/SwiftQL/XLQueryLimitStatement":{"abstract":[{"type":"text","text":"A select query with a limit clause."}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"XLQueryLimitStatement","kind":"identifier"}],"navigatorTitle":[{"text":"XLQueryLimitStatement","kind":"identifier"}],"role":"symbol","identifier":"doc:\/\/SwiftQL\/documentation\/SwiftQL\/XLQueryLimitStatement","type":"topic","url":"\/documentation\/swiftql\/xlquerylimitstatement","kind":"symbol","title":"XLQueryLimitStatement"},"doc://SwiftQL/documentation/SwiftQL/Swift/Double":{"identifier":"doc:\/\/SwiftQL\/documentation\/SwiftQL\/Swift\/Double","kind":"symbol","type":"topic","abstract":[{"text":"Adds support for ","type":"text"},{"code":"Double","type":"codeVoice"},{"text":" types to be used as SwiftQL columns.","type":"text"}],"title":"Double","navigatorTitle":[{"kind":"identifier","text":"Double"}],"url":"\/documentation\/swiftql\/swift\/double","fragments":[{"text":"extension","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Double","preciseIdentifier":"s:Sd","kind":"identifier"}],"role":"symbol"},"doc://SwiftQL/documentation/SwiftQL/XLDeleteTableStatement":{"url":"\/documentation\/swiftql\/xldeletetablestatement","kind":"symbol","type":"topic","abstract":[{"text":"Delete statement.","type":"text"}],"role":"symbol","identifier":"doc:\/\/SwiftQL\/documentation\/SwiftQL\/XLDeleteTableStatement","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"XLDeleteTableStatement"}],"navigatorTitle":[{"kind":"identifier","text":"XLDeleteTableStatement"}],"title":"XLDeleteTableStatement"},"doc://SwiftQL/documentation/SwiftQL/XLMetaWritableTable":{"kind":"symbol","role":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"XLMetaWritableTable"}],"navigatorTitle":[{"kind":"identifier","text":"XLMetaWritableTable"}],"abstract":[{"text":"Metadata for a ","type":"text"},{"type":"codeVoice","code":"@SQLTable"},{"text":" struct where the table is written to.","type":"text"}],"type":"topic","url":"\/documentation\/swiftql\/xlmetawritabletable","title":"XLMetaWritableTable","identifier":"doc:\/\/SwiftQL\/documentation\/SwiftQL\/XLMetaWritableTable"},"doc://SwiftQL/documentation/SwiftQL/XLUpdateFromStatement":{"url":"\/documentation\/swiftql\/xlupdatefromstatement","kind":"symbol","type":"topic","abstract":[{"text":"An update statement with a from clause.","type":"text"}],"role":"symbol","identifier":"doc:\/\/SwiftQL\/documentation\/SwiftQL\/XLUpdateFromStatement","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"XLUpdateFromStatement"}],"navigatorTitle":[{"kind":"identifier","text":"XLUpdateFromStatement"}],"title":"XLUpdateFromStatement"},"doc://SwiftQL/documentation/SwiftQL/XLInsertSelectStatement":{"url":"\/documentation\/swiftql\/xlinsertselectstatement","abstract":[{"type":"text","text":"Select clause in insert statement."}],"kind":"symbol","role":"symbol","identifier":"doc:\/\/SwiftQL\/documentation\/SwiftQL\/XLInsertSelectStatement","navigatorTitle":[{"kind":"identifier","text":"XLInsertSelectStatement"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"XLInsertSelectStatement","kind":"identifier"}],"type":"topic","title":"XLInsertSelectStatement"},"doc://SwiftQL/documentation/SwiftQL/Having":{"title":"Having","navigatorTitle":[{"kind":"identifier","text":"Having"}],"type":"topic","url":"\/documentation\/swiftql\/having","role":"symbol","kind":"symbol","identifier":"doc:\/\/SwiftQL\/documentation\/SwiftQL\/Having","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Having"}],"abstract":[{"text":"Having clause.","type":"text"}]},"doc://SwiftQL/documentation/SwiftQL/XLBinaryOperatorExpression":{"identifier":"doc:\/\/SwiftQL\/documentation\/SwiftQL\/XLBinaryOperatorExpression","kind":"symbol","type":"topic","abstract":[{"text":"Binary operator expression.","type":"text"}],"title":"XLBinaryOperatorExpression","navigatorTitle":[{"text":"XLBinaryOperatorExpression","kind":"identifier"}],"url":"\/documentation\/swiftql\/xlbinaryoperatorexpression","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"XLBinaryOperatorExpression","kind":"identifier"}],"role":"symbol"},"doc://SwiftQL/documentation/SwiftQL/XLCreateTableAsStatement":{"type":"topic","role":"symbol","title":"XLCreateTableAsStatement","url":"\/documentation\/swiftql\/xlcreatetableasstatement","abstract":[{"text":"Create table as clause.","type":"text"}],"navigatorTitle":[{"text":"XLCreateTableAsStatement","kind":"identifier"}],"identifier":"doc:\/\/SwiftQL\/documentation\/SwiftQL\/XLCreateTableAsStatement","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"XLCreateTableAsStatement","kind":"identifier"}],"kind":"symbol"},"doc://SwiftQL/documentation/SwiftQL/XLUpdateFromTableDependency":{"url":"\/documentation\/swiftql\/xlupdatefromtabledependency","abstract":[{"text":"A table used in a FROM clause in an UPDATE statement.","type":"text"}],"kind":"symbol","role":"symbol","identifier":"doc:\/\/SwiftQL\/documentation\/SwiftQL\/XLUpdateFromTableDependency","navigatorTitle":[{"text":"XLUpdateFromTableDependency","kind":"identifier"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"XLUpdateFromTableDependency","kind":"identifier"}],"type":"topic","title":"XLUpdateFromTableDependency"},"doc://SwiftQL/documentation/SwiftQL/XLQueryUnionStatement":{"identifier":"doc:\/\/SwiftQL\/documentation\/SwiftQL\/XLQueryUnionStatement","kind":"symbol","type":"topic","abstract":[{"text":"A query combining two queries.","type":"text"}],"title":"XLQueryUnionStatement","navigatorTitle":[{"text":"XLQueryUnionStatement","kind":"identifier"}],"url":"\/documentation\/swiftql\/xlqueryunionstatement","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"XLQueryUnionStatement","kind":"identifier"}],"role":"symbol"},"doc://SwiftQL/documentation/SwiftQL/XLQueryGroupByStatement":{"type":"topic","role":"symbol","url":"\/documentation\/swiftql\/xlquerygroupbystatement","title":"XLQueryGroupByStatement","abstract":[{"type":"text","text":"A select query statement with a group-by clause."}],"navigatorTitle":[{"text":"XLQueryGroupByStatement","kind":"identifier"}],"identifier":"doc:\/\/SwiftQL\/documentation\/SwiftQL\/XLQueryGroupByStatement","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"XLQueryGroupByStatement"}],"kind":"symbol"},"doc://SwiftQL/documentation/SwiftQL/Select":{"identifier":"doc:\/\/SwiftQL\/documentation\/SwiftQL\/Select","type":"topic","url":"\/documentation\/swiftql\/select","title":"Select","abstract":[{"text":"A select statement.","type":"text"}],"kind":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Select"}],"navigatorTitle":[{"kind":"identifier","text":"Select"}],"role":"symbol"},"doc://SwiftQL/documentation/SwiftQL/SQLScalarResult/MetaResult":{"identifier":"doc:\/\/SwiftQL\/documentation\/SwiftQL\/SQLScalarResult\/MetaResult","type":"topic","abstract":[],"title":"SQLScalarResult.MetaResult","url":"\/documentation\/swiftql\/sqlscalarresult\/metaresult","kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"MetaResult","kind":"identifier"}],"navigatorTitle":[{"text":"MetaResult","kind":"identifier"}],"role":"symbol","conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"type":"codeVoice","code":"T"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"XLExpression"},{"type":"text","text":" and "},{"type":"codeVoice","code":"XLLiteral"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}]}},"doc://SwiftQL/documentation/SwiftQL/XLDeleteStatement":{"url":"\/documentation\/swiftql\/xldeletestatement","kind":"symbol","type":"topic","abstract":[{"text":"A delete statement.","type":"text"}],"role":"symbol","identifier":"doc:\/\/SwiftQL\/documentation\/SwiftQL\/XLDeleteStatement","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"XLDeleteStatement"}],"navigatorTitle":[{"kind":"identifier","text":"XLDeleteStatement"}],"title":"XLDeleteStatement"},"doc://SwiftQL/documentation/SwiftQL/XLEncodable":{"title":"XLEncodable","navigatorTitle":[{"kind":"identifier","text":"XLEncodable"}],"type":"topic","url":"\/documentation\/swiftql\/xlencodable","role":"symbol","kind":"symbol","identifier":"doc:\/\/SwiftQL\/documentation\/SwiftQL\/XLEncodable","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"XLEncodable","kind":"identifier"}],"abstract":[{"type":"text","text":"Defines a type that can be transformed into an SQL expression."}]},"doc://SwiftQL/documentation/SwiftQL/XLInsertSelectTableStatement":{"url":"\/documentation\/swiftql\/xlinsertselecttablestatement","abstract":[{"text":"A select from statement used in an insert statement.","type":"text"}],"kind":"symbol","role":"symbol","identifier":"doc:\/\/SwiftQL\/documentation\/SwiftQL\/XLInsertSelectTableStatement","navigatorTitle":[{"text":"XLInsertSelectTableStatement","kind":"identifier"}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"XLInsertSelectTableStatement"}],"type":"topic","title":"XLInsertSelectTableStatement"},"doc://SwiftQL/documentation/SwiftQL/From":{"abstract":[{"type":"text","text":"From clause."}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"From","kind":"identifier"}],"navigatorTitle":[{"text":"From","kind":"identifier"}],"role":"symbol","identifier":"doc:\/\/SwiftQL\/documentation\/SwiftQL\/From","kind":"symbol","type":"topic","url":"\/documentation\/swiftql\/from","title":"From"},"doc://SwiftQL/documentation/SwiftQL/XLMetaUpdate":{"kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"XLMetaUpdate"}],"type":"topic","role":"symbol","identifier":"doc:\/\/SwiftQL\/documentation\/SwiftQL\/XLMetaUpdate","title":"XLMetaUpdate","url":"\/documentation\/swiftql\/xlmetaupdate","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"XLMetaUpdate","kind":"identifier"}],"abstract":[{"text":"Metadata for a ","type":"text"},{"type":"codeVoice","code":"@SQLTable"},{"text":"struct where the struct is used in an UPDATE statement.","type":"text"}]},"doc://SwiftQL/documentation/SwiftQL/XLFromCommonTableDependency":{"abstract":[{"type":"text","text":"A table used in a FROM clause in a common table expression."}],"identifier":"doc:\/\/SwiftQL\/documentation\/SwiftQL\/XLFromCommonTableDependency","role":"symbol","navigatorTitle":[{"text":"XLFromCommonTableDependency","kind":"identifier"}],"kind":"symbol","url":"\/documentation\/swiftql\/xlfromcommontabledependency","type":"topic","title":"XLFromCommonTableDependency","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"XLFromCommonTableDependency","kind":"identifier"}]},"doc://SwiftQL/documentation/SwiftQL/XLSubqueryDependency":{"abstract":[{"type":"text","text":"A table used in a subquery."}],"url":"\/documentation\/swiftql\/xlsubquerydependency","kind":"symbol","type":"topic","identifier":"doc:\/\/SwiftQL\/documentation\/SwiftQL\/XLSubqueryDependency","title":"XLSubqueryDependency","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"XLSubqueryDependency","kind":"identifier"}],"role":"symbol","navigatorTitle":[{"text":"XLSubqueryDependency","kind":"identifier"}]},"doc://SwiftQL/documentation/SwiftQL/XLUpdateStatementComponents":{"url":"\/documentation\/swiftql\/xlupdatestatementcomponents","kind":"symbol","type":"topic","abstract":[{"text":"Builder used to construct an update statement.","type":"text"}],"role":"symbol","identifier":"doc:\/\/SwiftQL\/documentation\/SwiftQL\/XLUpdateStatementComponents","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"XLUpdateStatementComponents","kind":"identifier"}],"navigatorTitle":[{"text":"XLUpdateStatementComponents","kind":"identifier"}],"title":"XLUpdateStatementComponents"},"doc://SwiftQL/documentation/SwiftQL/XLEnum":{"title":"XLEnum","navigatorTitle":[{"text":"XLEnum","kind":"identifier"}],"type":"topic","url":"\/documentation\/swiftql\/xlenum","role":"symbol","kind":"symbol","identifier":"doc:\/\/SwiftQL\/documentation\/SwiftQL\/XLEnum","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"text":"XLEnum","kind":"identifier"}],"abstract":[{"text":"An enum that is used as a column on an ","type":"text"},{"code":"SQLTable","type":"codeVoice"},{"text":" or ","type":"text"},{"code":"SQLResult","type":"codeVoice"},{"text":".","type":"text"}]},"doc://SwiftQL/documentation/SwiftQL/XLInValueExpression":{"identifier":"doc:\/\/SwiftQL\/documentation\/SwiftQL\/XLInValueExpression","kind":"symbol","type":"topic","abstract":[{"type":"text","text":"IN value expression."}],"title":"XLInValueExpression","navigatorTitle":[{"text":"XLInValueExpression","kind":"identifier"}],"url":"\/documentation\/swiftql\/xlinvalueexpression","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"XLInValueExpression","kind":"identifier"}],"role":"symbol"},"doc://SwiftQL/documentation/SwiftQL/XLQueryComponent":{"kind":"symbol","navigatorTitle":[{"text":"XLQueryComponent","kind":"identifier"}],"type":"topic","role":"symbol","identifier":"doc:\/\/SwiftQL\/documentation\/SwiftQL\/XLQueryComponent","title":"XLQueryComponent","url":"\/documentation\/swiftql\/xlquerycomponent","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"XLQueryComponent","kind":"identifier"}],"abstract":[{"text":"A clause within a query, such as ","type":"text"},{"code":"GroupBy","type":"codeVoice"},{"text":".","type":"text"}]},"doc://SwiftQL/documentation/SwiftQL/Swift/Int":{"url":"\/documentation\/swiftql\/swift\/int","kind":"symbol","type":"topic","abstract":[{"text":"Adds support for ","type":"text"},{"type":"codeVoice","code":"Int"},{"text":" types to be used as SwiftQL columns.","type":"text"}],"role":"symbol","identifier":"doc:\/\/SwiftQL\/documentation\/SwiftQL\/Swift\/Int","fragments":[{"text":"extension","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Int","kind":"identifier","preciseIdentifier":"s:Si"}],"navigatorTitle":[{"text":"Int","kind":"identifier"}],"title":"Int"},"doc://SwiftQL/documentation/SwiftQL/VariableCaseWhenThen":{"title":"VariableCaseWhenThen","navigatorTitle":[{"text":"VariableCaseWhenThen","kind":"identifier"}],"type":"topic","url":"\/documentation\/swiftql\/variablecasewhenthen","role":"symbol","kind":"symbol","identifier":"doc:\/\/SwiftQL\/documentation\/SwiftQL\/VariableCaseWhenThen","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"VariableCaseWhenThen","kind":"identifier"}],"abstract":[]},"doc://SwiftQL/documentation/SwiftQL/OrderBy":{"abstract":[{"text":"OrderBy clause.","type":"text"}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"OrderBy","kind":"identifier"}],"navigatorTitle":[{"text":"OrderBy","kind":"identifier"}],"role":"symbol","identifier":"doc:\/\/SwiftQL\/documentation\/SwiftQL\/OrderBy","kind":"symbol","url":"\/documentation\/swiftql\/orderby","type":"topic","title":"OrderBy"},"doc://SwiftQL/documentation/SwiftQL/XLInsertSelectWhereStatement":{"identifier":"doc:\/\/SwiftQL\/documentation\/SwiftQL\/XLInsertSelectWhereStatement","kind":"symbol","type":"topic","abstract":[{"text":"A select where statement used in an insert statement.","type":"text"}],"title":"XLInsertSelectWhereStatement","navigatorTitle":[{"text":"XLInsertSelectWhereStatement","kind":"identifier"}],"url":"\/documentation\/swiftql\/xlinsertselectwherestatement","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"XLInsertSelectWhereStatement","kind":"identifier"}],"role":"symbol"},"doc://SwiftQL/documentation/SwiftQL/XLFromSubqueryDependency":{"kind":"symbol","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"XLFromSubqueryDependency","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"XLFromSubqueryDependency"}],"abstract":[{"text":"A table used in a FROM clause in a subquery.","type":"text"}],"type":"topic","url":"\/documentation\/swiftql\/xlfromsubquerydependency","title":"XLFromSubqueryDependency","identifier":"doc:\/\/SwiftQL\/documentation\/SwiftQL\/XLFromSubqueryDependency"},"doc://SwiftQL/documentation/SwiftQL/XLMetaNullableNamedResult":{"type":"topic","role":"symbol","abstract":[{"type":"text","text":"Metadata for a "},{"type":"codeVoice","code":"@SQLTable"},{"text":" or ","type":"text"},{"code":"@SQLResult","type":"codeVoice"},{"type":"text","text":" struct  where the struct is used as a table with a given"},{"type":"text","text":" "},{"type":"text","text":"name in a query, and where the table can resolve to NULL, such as a LEFT JOIN in a common table"},{"type":"text","text":" "},{"type":"text","text":"expression."}],"title":"XLMetaNullableNamedResult","url":"\/documentation\/swiftql\/xlmetanullablenamedresult","navigatorTitle":[{"text":"XLMetaNullableNamedResult","kind":"identifier"}],"identifier":"doc:\/\/SwiftQL\/documentation\/SwiftQL\/XLMetaNullableNamedResult","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"XLMetaNullableNamedResult","kind":"identifier"}],"kind":"symbol"},"doc://SwiftQL/documentation/SwiftQL/XLEncodable/MakeExpression":{"abstract":[],"kind":"symbol","type":"topic","title":"XLEncodable.MakeExpression","url":"\/documentation\/swiftql\/xlencodable\/makeexpression","identifier":"doc:\/\/SwiftQL\/documentation\/SwiftQL\/XLEncodable\/MakeExpression","navigatorTitle":[{"kind":"identifier","text":"MakeExpression"}],"fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"kind":"identifier","text":"MakeExpression"}],"role":"symbol"},"doc://SwiftQL/documentation/SwiftQL/XLQueryTableStatement":{"abstract":[{"text":"A select query statement with a from clause.","type":"text"}],"identifier":"doc:\/\/SwiftQL\/documentation\/SwiftQL\/XLQueryTableStatement","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"XLQueryTableStatement"}],"kind":"symbol","url":"\/documentation\/swiftql\/xlquerytablestatement","type":"topic","title":"XLQueryTableStatement","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"XLQueryTableStatement"}]},"doc://SwiftQL/documentation/SwiftQL/XLColumnResult":{"identifier":"doc:\/\/SwiftQL\/documentation\/SwiftQL\/XLColumnResult","kind":"symbol","type":"topic","abstract":[{"type":"text","text":"Expression that refers to a column in a result, such as the list of columns in a select statement."}],"title":"XLColumnResult","navigatorTitle":[{"text":"XLColumnResult","kind":"identifier"}],"url":"\/documentation\/swiftql\/xlcolumnresult","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"XLColumnResult","kind":"identifier"}],"role":"symbol"},"doc://SwiftQL/documentation/SwiftQL/XLTypeAffinityExpression":{"abstract":[{"text":"Type affinity expression.","type":"text"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"XLTypeAffinityExpression","kind":"identifier"}],"navigatorTitle":[{"text":"XLTypeAffinityExpression","kind":"identifier"}],"role":"symbol","identifier":"doc:\/\/SwiftQL\/documentation\/SwiftQL\/XLTypeAffinityExpression","type":"topic","url":"\/documentation\/swiftql\/xltypeaffinityexpression","kind":"symbol","title":"XLTypeAffinityExpression"},"doc://SwiftQL/documentation/SwiftQL/XLQuerySelectStatement":{"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"XLQuerySelectStatement"}],"navigatorTitle":[{"text":"XLQuerySelectStatement","kind":"identifier"}],"identifier":"doc:\/\/SwiftQL\/documentation\/SwiftQL\/XLQuerySelectStatement","type":"topic","url":"\/documentation\/swiftql\/xlqueryselectstatement","kind":"symbol","title":"XLQuerySelectStatement","abstract":[{"type":"text","text":"A select query statement."}],"role":"symbol"},"doc://SwiftQL/documentation/SwiftQL/XLNullCoalesceExpression":{"abstract":[{"text":"Null coalescing expression.","type":"text"}],"url":"\/documentation\/swiftql\/xlnullcoalesceexpression","kind":"symbol","type":"topic","identifier":"doc:\/\/SwiftQL\/documentation\/SwiftQL\/XLNullCoalesceExpression","title":"XLNullCoalesceExpression","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"XLNullCoalesceExpression","kind":"identifier"}],"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"XLNullCoalesceExpression"}]},"doc://SwiftQL/documentation/SwiftQL/Offset":{"title":"Offset","identifier":"doc:\/\/SwiftQL\/documentation\/SwiftQL\/Offset","abstract":[{"text":"Offset clause.","type":"text"}],"url":"\/documentation\/swiftql\/offset","type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Offset"}],"kind":"symbol","role":"symbol","navigatorTitle":[{"text":"Offset","kind":"identifier"}]},"doc://SwiftQL/documentation/SwiftQL/XLExpression":{"abstract":[{"type":"text","text":"An SQL expression."}],"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"XLExpression","kind":"identifier"}],"navigatorTitle":[{"text":"XLExpression","kind":"identifier"}],"role":"symbol","identifier":"doc:\/\/SwiftQL\/documentation\/SwiftQL\/XLExpression","type":"topic","url":"\/documentation\/swiftql\/xlexpression","kind":"symbol","title":"XLExpression"},"doc://SwiftQL/documentation/SwiftQL/XLTableStatement":{"url":"\/documentation\/swiftql\/xltablestatement","abstract":[],"kind":"symbol","role":"symbol","identifier":"doc:\/\/SwiftQL\/documentation\/SwiftQL\/XLTableStatement","navigatorTitle":[{"text":"XLTableStatement","kind":"identifier"}],"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"XLTableStatement","kind":"identifier"}],"type":"topic","title":"XLTableStatement"},"doc://SwiftQL/documentation/SwiftQL/XLQualifiedSelectColumnName":{"kind":"symbol","navigatorTitle":[{"text":"XLQualifiedSelectColumnName","kind":"identifier"}],"type":"topic","role":"symbol","identifier":"doc:\/\/SwiftQL\/documentation\/SwiftQL\/XLQualifiedSelectColumnName","title":"XLQualifiedSelectColumnName","url":"\/documentation\/swiftql\/xlqualifiedselectcolumnname","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"XLQualifiedSelectColumnName"}],"abstract":[{"type":"text","text":"A qualified name of a column in a result set in a select statement."}]},"doc://SwiftQL/documentation/SwiftQL/XLMetaNullableResult":{"url":"\/documentation\/swiftql\/xlmetanullableresult","abstract":[{"type":"text","text":"Metadata for a "},{"type":"codeVoice","code":"@SQLTable"},{"type":"text","text":" or "},{"type":"codeVoice","code":"@SQLResult"},{"type":"text","text":" struct where the struct is used as a table in a query"},{"type":"text","text":" "},{"type":"text","text":"where the table can resolve to NULL, such as in a LEFT JOIN."}],"kind":"symbol","role":"symbol","identifier":"doc:\/\/SwiftQL\/documentation\/SwiftQL\/XLMetaNullableResult","navigatorTitle":[{"kind":"identifier","text":"XLMetaNullableResult"}],"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"XLMetaNullableResult"}],"type":"topic","title":"XLMetaNullableResult"},"doc://SwiftQL/documentation/SwiftQL/XLConcatenationExpression":{"abstract":[{"text":"String contatenation expression.","type":"text"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"XLConcatenationExpression","kind":"identifier"}],"navigatorTitle":[{"text":"XLConcatenationExpression","kind":"identifier"}],"role":"symbol","identifier":"doc:\/\/SwiftQL\/documentation\/SwiftQL\/XLConcatenationExpression","kind":"symbol","url":"\/documentation\/swiftql\/xlconcatenationexpression","type":"topic","title":"XLConcatenationExpression"},"doc://SwiftQL/documentation/SwiftQL/XLSelectResultDependency":{"title":"XLSelectResultDependency","navigatorTitle":[{"text":"XLSelectResultDependency","kind":"identifier"}],"type":"topic","url":"\/documentation\/swiftql\/xlselectresultdependency","role":"symbol","kind":"symbol","identifier":"doc:\/\/SwiftQL\/documentation\/SwiftQL\/XLSelectResultDependency","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"XLSelectResultDependency","kind":"identifier"}],"abstract":[{"type":"text","text":"The result of a select statement."}]},"doc://SwiftQL/documentation/SwiftQL/XLInsertStatement":{"kind":"symbol","role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"XLInsertStatement"}],"navigatorTitle":[{"text":"XLInsertStatement","kind":"identifier"}],"abstract":[{"text":"An insert statement.","type":"text"}],"type":"topic","url":"\/documentation\/swiftql\/xlinsertstatement","title":"XLInsertStatement","identifier":"doc:\/\/SwiftQL\/documentation\/SwiftQL\/XLInsertStatement"},"doc://SwiftQL/documentation/SwiftQL/XLQueryStatementComponents":{"abstract":[{"type":"text","text":"Builder used to construct a select query statement."}],"url":"\/documentation\/swiftql\/xlquerystatementcomponents","kind":"symbol","type":"topic","identifier":"doc:\/\/SwiftQL\/documentation\/SwiftQL\/XLQueryStatementComponents","title":"XLQueryStatementComponents","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"XLQueryStatementComponents","kind":"identifier"}],"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"XLQueryStatementComponents"}]},"doc://SwiftQL/documentation/SwiftQL/XLIfExpression":{"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"XLIfExpression","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"XLIfExpression"}],"identifier":"doc:\/\/SwiftQL\/documentation\/SwiftQL\/XLIfExpression","type":"topic","url":"\/documentation\/swiftql\/xlifexpression","kind":"symbol","title":"XLIfExpression","abstract":[{"text":"IIF expression.","type":"text"}],"role":"symbol"},"doc://SwiftQL/documentation/SwiftQL/XLInsertSelectGroupByStatement":{"abstract":[{"text":"A select group-by statement used in an insert statement.","type":"text"}],"identifier":"doc:\/\/SwiftQL\/documentation\/SwiftQL\/XLInsertSelectGroupByStatement","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"XLInsertSelectGroupByStatement"}],"kind":"symbol","url":"\/documentation\/swiftql\/xlinsertselectgroupbystatement","type":"topic","title":"XLInsertSelectGroupByStatement","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"XLInsertSelectGroupByStatement","kind":"identifier"}]},"doc://SwiftQL/documentation/SwiftQL/Descending":{"url":"\/documentation\/swiftql\/descending","kind":"symbol","type":"topic","abstract":[{"text":"Descending ordering term used in an OrderBy expression.","type":"text"}],"role":"symbol","identifier":"doc:\/\/SwiftQL\/documentation\/SwiftQL\/Descending","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Descending"}],"navigatorTitle":[{"kind":"identifier","text":"Descending"}],"title":"Descending"}}}