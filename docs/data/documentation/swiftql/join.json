{"sections":[],"metadata":{"modules":[{"name":"SwiftQL"}],"symbolKind":"struct","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Join","kind":"identifier"}],"navigatorTitle":[{"text":"Join","kind":"identifier"}],"roleHeading":"Structure","title":"Join","externalID":"s:7SwiftQL4JoinV"},"schemaVersion":{"minor":3,"patch":0,"major":0},"hierarchy":{"paths":[["doc:\/\/SwiftQL\/documentation\/SwiftQL"]]},"topicSections":[{"generated":true,"title":"Initializers","identifiers":["doc:\/\/SwiftQL\/documentation\/SwiftQL\/Join\/init(_:on:)"],"anchor":"Initializers"},{"generated":true,"title":"Instance Methods","identifiers":["doc:\/\/SwiftQL\/documentation\/SwiftQL\/Join\/makeSQL(context:)"],"anchor":"Instance-Methods"},{"anchor":"Type-Methods","title":"Type Methods","identifiers":["doc:\/\/SwiftQL\/documentation\/SwiftQL\/Join\/Cross(_:)","doc:\/\/SwiftQL\/documentation\/SwiftQL\/Join\/Inner(_:)","doc:\/\/SwiftQL\/documentation\/SwiftQL\/Join\/Inner(_:on:)","doc:\/\/SwiftQL\/documentation\/SwiftQL\/Join\/Left(_:on:)","doc:\/\/SwiftQL\/documentation\/SwiftQL\/Join\/Outer(_:on:)"],"generated":true},{"anchor":"Enumerations","title":"Enumerations","identifiers":["doc:\/\/SwiftQL\/documentation\/SwiftQL\/Join\/Kind"],"generated":true},{"anchor":"Default-Implementations","title":"Default Implementations","identifiers":["doc:\/\/SwiftQL\/documentation\/SwiftQL\/Join\/XLEncodable-Implementations"],"generated":true}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/swiftql\/join"]}],"kind":"symbol","primaryContentSections":[{"declarations":[{"languages":["swift"],"tokens":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Join","kind":"identifier"}],"platforms":["macOS"]}],"kind":"declarations"}],"abstract":[{"text":"Note: Right joins are not supported.  A workaround is to LEFT JOIN, and swap the tables in the FROM and JOIN clauses.","type":"text"},{"text":" ","type":"text"},{"text":"Note: “INNER JOIN”, “CROSS JOIN”, “JOIN”, “,” all perform a cartesian product, which returns every possible combination of rows from the two tables.","type":"text"},{"text":" ","type":"text"},{"text":"Note: CROSS JOIN is treated as a special case by XLite in that it returns the cartesian product but does not re-order the tables.","type":"text"}],"identifier":{"url":"doc:\/\/SwiftQL\/documentation\/SwiftQL\/Join","interfaceLanguage":"swift"},"relationshipsSections":[{"type":"conformsTo","title":"Conforms To","identifiers":["doc:\/\/SwiftQL\/documentation\/SwiftQL\/XLEncodable","doc:\/\/SwiftQL\/documentation\/SwiftQL\/XLQueryComponent","doc:\/\/SwiftQL\/documentation\/SwiftQL\/XLTableStatement"],"kind":"relationships"}],"references":{"doc://SwiftQL/documentation/SwiftQL/Join/Inner(_:)":{"role":"symbol","url":"\/documentation\/swiftql\/join\/inner(_:)","identifier":"doc:\/\/SwiftQL\/documentation\/SwiftQL\/Join\/Inner(_:)","type":"topic","abstract":[],"title":"Inner(_:)","fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"Inner","kind":"identifier"},{"kind":"text","text":"<"},{"text":"T","kind":"genericParameter"},{"kind":"text","text":">("},{"text":"T","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Join","preciseIdentifier":"s:7SwiftQL4JoinV"}],"kind":"symbol"},"doc://SwiftQL/documentation/SwiftQL/Join/Inner(_:on:)":{"role":"symbol","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Inner","kind":"identifier"},{"text":"<","kind":"text"},{"text":"T","kind":"genericParameter"},{"text":", ","kind":"text"},{"text":"U","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"on","kind":"externalParam"},{"text":": any ","kind":"text"},{"text":"XLExpression","preciseIdentifier":"s:7SwiftQL12XLExpressionP","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"U","kind":"typeIdentifier"},{"text":">) -> ","kind":"text"},{"text":"Join","kind":"typeIdentifier","preciseIdentifier":"s:7SwiftQL4JoinV"}],"url":"\/documentation\/swiftql\/join\/inner(_:on:)","type":"topic","kind":"symbol","abstract":[],"identifier":"doc:\/\/SwiftQL\/documentation\/SwiftQL\/Join\/Inner(_:on:)","title":"Inner(_:on:)"},"doc://SwiftQL/documentation/SwiftQL/Join/makeSQL(context:)":{"role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"makeSQL"},{"kind":"text","text":"("},{"kind":"externalParam","text":"context"},{"kind":"text","text":": "},{"kind":"keyword","text":"inout"},{"kind":"text","text":" any "},{"kind":"typeIdentifier","preciseIdentifier":"s:7SwiftQL9XLBuilderP","text":"XLBuilder"},{"kind":"text","text":")"}],"url":"\/documentation\/swiftql\/join\/makesql(context:)","type":"topic","kind":"symbol","abstract":[],"identifier":"doc:\/\/SwiftQL\/documentation\/SwiftQL\/Join\/makeSQL(context:)","title":"makeSQL(context:)"},"doc://SwiftQL/documentation/SwiftQL/Join/Kind":{"kind":"symbol","identifier":"doc:\/\/SwiftQL\/documentation\/SwiftQL\/Join\/Kind","role":"symbol","abstract":[],"url":"\/documentation\/swiftql\/join\/kind","type":"topic","title":"Join.Kind","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Kind","kind":"identifier"}],"navigatorTitle":[{"text":"Kind","kind":"identifier"}]},"doc://SwiftQL/documentation/SwiftQL/Join/Left(_:on:)":{"role":"symbol","url":"\/documentation\/swiftql\/join\/left(_:on:)","identifier":"doc:\/\/SwiftQL\/documentation\/SwiftQL\/Join\/Left(_:on:)","type":"topic","abstract":[],"title":"Left(_:on:)","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Left","kind":"identifier"},{"text":"<","kind":"text"},{"text":"T","kind":"genericParameter"},{"text":", ","kind":"text"},{"text":"U","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"on","kind":"externalParam"},{"text":": any ","kind":"text"},{"text":"XLExpression","preciseIdentifier":"s:7SwiftQL12XLExpressionP","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"U","kind":"typeIdentifier"},{"text":">) -> ","kind":"text"},{"text":"Join","preciseIdentifier":"s:7SwiftQL4JoinV","kind":"typeIdentifier"}],"kind":"symbol"},"doc://SwiftQL/documentation/SwiftQL":{"kind":"symbol","identifier":"doc:\/\/SwiftQL\/documentation\/SwiftQL","role":"collection","abstract":[],"title":"SwiftQL","type":"topic","url":"\/documentation\/swiftql"},"doc://SwiftQL/documentation/SwiftQL/XLTableStatement":{"role":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"text":"XLTableStatement","kind":"identifier"}],"url":"\/documentation\/swiftql\/xltablestatement","type":"topic","kind":"symbol","navigatorTitle":[{"text":"XLTableStatement","kind":"identifier"}],"abstract":[],"identifier":"doc:\/\/SwiftQL\/documentation\/SwiftQL\/XLTableStatement","title":"XLTableStatement"},"doc://SwiftQL/documentation/SwiftQL/Join/Cross(_:)":{"role":"symbol","url":"\/documentation\/swiftql\/join\/cross(_:)","title":"Cross(_:)","abstract":[],"identifier":"doc:\/\/SwiftQL\/documentation\/SwiftQL\/Join\/Cross(_:)","kind":"symbol","type":"topic","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Cross","kind":"identifier"},{"text":"<","kind":"text"},{"text":"T","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:7SwiftQL4JoinV","text":"Join","kind":"typeIdentifier"}]},"doc://SwiftQL/documentation/SwiftQL/Join/init(_:on:)":{"role":"symbol","kind":"symbol","type":"topic","identifier":"doc:\/\/SwiftQL\/documentation\/SwiftQL\/Join\/init(_:on:)","url":"\/documentation\/swiftql\/join\/init(_:on:)","fragments":[{"text":"init","kind":"identifier"},{"text":"<","kind":"text"},{"text":"T","kind":"genericParameter"},{"text":", ","kind":"text"},{"text":"U","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"on","kind":"externalParam"},{"text":": any ","kind":"text"},{"preciseIdentifier":"s:7SwiftQL12XLExpressionP","text":"XLExpression","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"U","kind":"typeIdentifier"},{"text":">)","kind":"text"}],"title":"init(_:on:)","abstract":[{"code":"Join","type":"codeVoice"},{"text":" is a synonym for ","type":"text"},{"code":"Join.Inner","type":"codeVoice"},{"text":".","type":"text"}]},"doc://SwiftQL/documentation/SwiftQL/XLQueryComponent":{"role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"XLQueryComponent","kind":"identifier"}],"url":"\/documentation\/swiftql\/xlquerycomponent","type":"topic","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"XLQueryComponent"}],"abstract":[],"identifier":"doc:\/\/SwiftQL\/documentation\/SwiftQL\/XLQueryComponent","title":"XLQueryComponent"},"doc://SwiftQL/documentation/SwiftQL/Join/XLEncodable-Implementations":{"role":"collectionGroup","url":"\/documentation\/swiftql\/join\/xlencodable-implementations","type":"topic","kind":"article","abstract":[],"identifier":"doc:\/\/SwiftQL\/documentation\/SwiftQL\/Join\/XLEncodable-Implementations","title":"XLEncodable Implementations"},"doc://SwiftQL/documentation/SwiftQL/XLEncodable":{"abstract":[],"type":"topic","navigatorTitle":[{"kind":"identifier","text":"XLEncodable"}],"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"XLEncodable","kind":"identifier"}],"url":"\/documentation\/swiftql\/xlencodable","role":"symbol","title":"XLEncodable","identifier":"doc:\/\/SwiftQL\/documentation\/SwiftQL\/XLEncodable","kind":"symbol"},"doc://SwiftQL/documentation/SwiftQL/Join":{"role":"symbol","type":"topic","identifier":"doc:\/\/SwiftQL\/documentation\/SwiftQL\/Join","kind":"symbol","url":"\/documentation\/swiftql\/join","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Join","kind":"identifier"}],"navigatorTitle":[{"text":"Join","kind":"identifier"}],"title":"Join","abstract":[{"text":"Note: Right joins are not supported.  A workaround is to LEFT JOIN, and swap the tables in the FROM and JOIN clauses.","type":"text"},{"text":" ","type":"text"},{"text":"Note: “INNER JOIN”, “CROSS JOIN”, “JOIN”, “,” all perform a cartesian product, which returns every possible combination of rows from the two tables.","type":"text"},{"text":" ","type":"text"},{"text":"Note: CROSS JOIN is treated as a special case by XLite in that it returns the cartesian product but does not re-order the tables.","type":"text"}]},"doc://SwiftQL/documentation/SwiftQL/Join/Outer(_:on:)":{"role":"symbol","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Outer","kind":"identifier"},{"text":"<","kind":"text"},{"text":"T","kind":"genericParameter"},{"text":", ","kind":"text"},{"text":"U","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"on","kind":"externalParam"},{"text":": any ","kind":"text"},{"text":"XLExpression","preciseIdentifier":"s:7SwiftQL12XLExpressionP","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"U","kind":"typeIdentifier"},{"text":">) -> ","kind":"text"},{"text":"Join","preciseIdentifier":"s:7SwiftQL4JoinV","kind":"typeIdentifier"}],"url":"\/documentation\/swiftql\/join\/outer(_:on:)","type":"topic","kind":"symbol","abstract":[],"identifier":"doc:\/\/SwiftQL\/documentation\/SwiftQL\/Join\/Outer(_:on:)","title":"Outer(_:on:)"}}}