{"primaryContentSections":[{"declarations":[{"languages":["swift"],"tokens":[{"kind":"keyword","text":"case"},{"kind":"text","text":" "},{"kind":"identifier","text":"leftJoin"}],"platforms":["macOS"]}],"kind":"declarations"}],"identifier":{"url":"doc:\/\/SwiftQL\/documentation\/SwiftQL\/Join\/Kind\/leftJoin","interfaceLanguage":"swift"},"sections":[],"metadata":{"externalID":"s:7SwiftQL4JoinV4KindO04leftC0yA2EmF","modules":[{"name":"SwiftQL"}],"title":"Join.Kind.leftJoin","symbolKind":"case","roleHeading":"Case","role":"symbol","fragments":[{"text":"case","kind":"keyword"},{"text":" ","kind":"text"},{"text":"leftJoin","kind":"identifier"}]},"hierarchy":{"paths":[["doc:\/\/SwiftQL\/documentation\/SwiftQL","doc:\/\/SwiftQL\/documentation\/SwiftQL\/Join","doc:\/\/SwiftQL\/documentation\/SwiftQL\/Join\/Kind"]]},"kind":"symbol","variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/swiftql\/join\/kind\/leftjoin"]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"references":{"doc://SwiftQL/documentation/SwiftQL":{"identifier":"doc:\/\/SwiftQL\/documentation\/SwiftQL","type":"topic","title":"SwiftQL","url":"\/documentation\/swiftql","abstract":[],"role":"collection","kind":"symbol"},"doc://SwiftQL/documentation/SwiftQL/Join":{"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Join"}],"identifier":"doc:\/\/SwiftQL\/documentation\/SwiftQL\/Join","navigatorTitle":[{"kind":"identifier","text":"Join"}],"type":"topic","title":"Join","kind":"symbol","abstract":[{"type":"text","text":"Note: Right joins are not supported.  A workaround is to LEFT JOIN, and swap the tables in the FROM and JOIN clauses."},{"type":"text","text":" "},{"type":"text","text":"Note: “INNER JOIN”, “CROSS JOIN”, “JOIN”, “,” all perform a cartesian product, which returns every possible combination of rows from the two tables."},{"type":"text","text":" "},{"type":"text","text":"Note: CROSS JOIN is treated as a special case by XLite in that it returns the cartesian product but does not re-order the tables."}],"url":"\/documentation\/swiftql\/join","role":"symbol"},"doc://SwiftQL/documentation/SwiftQL/Join/Kind/leftJoin":{"fragments":[{"text":"case","kind":"keyword"},{"text":" ","kind":"text"},{"text":"leftJoin","kind":"identifier"}],"identifier":"doc:\/\/SwiftQL\/documentation\/SwiftQL\/Join\/Kind\/leftJoin","type":"topic","title":"Join.Kind.leftJoin","kind":"symbol","abstract":[],"url":"\/documentation\/swiftql\/join\/kind\/leftjoin","role":"symbol"},"doc://SwiftQL/documentation/SwiftQL/Join/Kind":{"navigatorTitle":[{"kind":"identifier","text":"Kind"}],"url":"\/documentation\/swiftql\/join\/kind","kind":"symbol","title":"Join.Kind","abstract":[],"type":"topic","role":"symbol","fragments":[{"kind":"keyword","text":"enum"},{"text":" ","kind":"text"},{"text":"Kind","kind":"identifier"}],"identifier":"doc:\/\/SwiftQL\/documentation\/SwiftQL\/Join\/Kind"}}}