{"schemaVersion":{"minor":3,"major":0,"patch":0},"variants":[{"paths":["\/documentation\/swiftql\/join\/kind\/init(rawvalue:)"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/SwiftQL\/documentation\/SwiftQL\/Join\/Kind\/init(rawValue:)"},"sections":[],"primaryContentSections":[{"declarations":[{"languages":["swift"],"tokens":[{"text":"init","kind":"keyword"},{"text":"?(","kind":"text"},{"text":"rawValue","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"},{"text":")","kind":"text"}],"platforms":["macOS"]}],"kind":"declarations"}],"kind":"symbol","hierarchy":{"paths":[["doc:\/\/SwiftQL\/documentation\/SwiftQL","doc:\/\/SwiftQL\/documentation\/SwiftQL\/Join","doc:\/\/SwiftQL\/documentation\/SwiftQL\/Join\/Kind"]]},"metadata":{"title":"init(rawValue:)","externalID":"s:7SwiftQL4JoinV4KindO8rawValueAESgSS_tcfc","symbolKind":"init","role":"symbol","roleHeading":"Initializer","modules":[{"name":"SwiftQL"}],"fragments":[{"text":"init","kind":"identifier"},{"kind":"text","text":"?("},{"text":"rawValue","kind":"externalParam"},{"kind":"text","text":": "},{"text":"String","preciseIdentifier":"s:SS","kind":"typeIdentifier"},{"kind":"text","text":")"}]},"abstract":[{"text":"Inherited from ","type":"text"},{"code":"RawRepresentable.init(rawValue:)","type":"codeVoice"},{"text":".","type":"text"}],"references":{"doc://SwiftQL/documentation/SwiftQL/Join":{"title":"Join","type":"topic","navigatorTitle":[{"text":"Join","kind":"identifier"}],"identifier":"doc:\/\/SwiftQL\/documentation\/SwiftQL\/Join","role":"symbol","kind":"symbol","url":"\/documentation\/swiftql\/join","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"Join","kind":"identifier"}],"abstract":[{"type":"text","text":"Note: Right joins are not supported.  A workaround is to LEFT JOIN, and swap the tables in the FROM and JOIN clauses."},{"text":" ","type":"text"},{"text":"Note: “INNER JOIN”, “CROSS JOIN”, “JOIN”, “,” all perform a cartesian product, which returns every possible combination of rows from the two tables.","type":"text"},{"text":" ","type":"text"},{"text":"Note: CROSS JOIN is treated as a special case by XLite in that it returns the cartesian product but does not re-order the tables.","type":"text"}]},"doc://SwiftQL/documentation/SwiftQL":{"title":"SwiftQL","role":"collection","type":"topic","abstract":[],"kind":"symbol","identifier":"doc:\/\/SwiftQL\/documentation\/SwiftQL","url":"\/documentation\/swiftql"},"doc://SwiftQL/documentation/SwiftQL/Join/Kind/init(rawValue:)":{"title":"init(rawValue:)","type":"topic","identifier":"doc:\/\/SwiftQL\/documentation\/SwiftQL\/Join\/Kind\/init(rawValue:)","role":"symbol","kind":"symbol","url":"\/documentation\/swiftql\/join\/kind\/init(rawvalue:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"?("},{"kind":"externalParam","text":"rawValue"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","text":"String"},{"kind":"text","text":")"}],"abstract":[]},"doc://SwiftQL/documentation/SwiftQL/Join/Kind":{"fragments":[{"kind":"keyword","text":"enum"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Kind"}],"kind":"symbol","url":"\/documentation\/swiftql\/join\/kind","title":"Join.Kind","abstract":[],"type":"topic","role":"symbol","identifier":"doc:\/\/SwiftQL\/documentation\/SwiftQL\/Join\/Kind","navigatorTitle":[{"text":"Kind","kind":"identifier"}]}}}