{"metadata":{"role":"symbol","modules":[{"name":"SwiftQL"}],"roleHeading":"Type Method","symbolKind":"method","title":"Left(_:on:)","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"Left"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"U"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":", "},{"kind":"externalParam","text":"on"},{"kind":"text","text":": any "},{"preciseIdentifier":"s:7SwiftQL12XLExpressionP","kind":"typeIdentifier","text":"XLExpression"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"U"},{"kind":"text","text":">) -> "},{"preciseIdentifier":"s:7SwiftQL4JoinV","kind":"typeIdentifier","text":"Join"}],"externalID":"s:7SwiftQL4JoinV4Left_2onACx_AA12XLExpression_pq_1TRts_XPtAA25XLMetaNullableNamedResultRzAA9XLBooleanR_r0_lFZ"},"variants":[{"paths":["\/documentation\/swiftql\/join\/left(_:on:)"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/SwiftQL\/documentation\/SwiftQL\/Join\/Left(_:on:)"},"primaryContentSections":[{"declarations":[{"platforms":["macOS"],"tokens":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Left","kind":"identifier"},{"text":"<","kind":"text"},{"text":"T","kind":"genericParameter"},{"text":", ","kind":"text"},{"text":"U","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"table","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"on","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"constraint","kind":"internalParam"},{"text":": any ","kind":"text"},{"text":"XLExpression","identifier":"doc:\/\/SwiftQL\/documentation\/SwiftQL\/XLExpression","preciseIdentifier":"s:7SwiftQL12XLExpressionP","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"U","kind":"typeIdentifier"},{"text":">) -> ","kind":"text"},{"text":"Join","identifier":"doc:\/\/SwiftQL\/documentation\/SwiftQL\/Join","preciseIdentifier":"s:7SwiftQL4JoinV","kind":"typeIdentifier"},{"text":" ","kind":"text"},{"text":"where","kind":"keyword"},{"text":" ","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"text":"XLMetaNullableNamedResult","identifier":"doc:\/\/SwiftQL\/documentation\/SwiftQL\/XLMetaNullableNamedResult","preciseIdentifier":"s:7SwiftQL25XLMetaNullableNamedResultP","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"U","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"text":"XLBoolean","identifier":"doc:\/\/SwiftQL\/documentation\/SwiftQL\/XLBoolean","preciseIdentifier":"s:7SwiftQL9XLBooleanP","kind":"typeIdentifier"}],"languages":["swift"]}],"kind":"declarations"}],"hierarchy":{"paths":[["doc:\/\/SwiftQL\/documentation\/SwiftQL","doc:\/\/SwiftQL\/documentation\/SwiftQL\/Join"]]},"schemaVersion":{"major":0,"minor":3,"patch":0},"kind":"symbol","sections":[],"references":{"doc://SwiftQL/documentation/SwiftQL":{"kind":"symbol","identifier":"doc:\/\/SwiftQL\/documentation\/SwiftQL","role":"collection","abstract":[],"title":"SwiftQL","type":"topic","url":"\/documentation\/swiftql"},"doc://SwiftQL/documentation/SwiftQL/XLExpression":{"role":"symbol","url":"\/documentation\/swiftql\/xlexpression","identifier":"doc:\/\/SwiftQL\/documentation\/SwiftQL\/XLExpression","type":"topic","abstract":[{"text":"An XL expression. An expression evaluates to a value of a known type.","type":"text"}],"title":"XLExpression","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"XLExpression"}],"kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"XLExpression"}]},"doc://SwiftQL/documentation/SwiftQL/XLMetaNullableNamedResult":{"kind":"symbol","identifier":"doc:\/\/SwiftQL\/documentation\/SwiftQL\/XLMetaNullableNamedResult","role":"symbol","abstract":[],"url":"\/documentation\/swiftql\/xlmetanullablenamedresult","type":"topic","title":"XLMetaNullableNamedResult","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"XLMetaNullableNamedResult","kind":"identifier"}],"navigatorTitle":[{"text":"XLMetaNullableNamedResult","kind":"identifier"}]},"doc://SwiftQL/documentation/SwiftQL/Join/Left(_:on:)":{"role":"symbol","url":"\/documentation\/swiftql\/join\/left(_:on:)","identifier":"doc:\/\/SwiftQL\/documentation\/SwiftQL\/Join\/Left(_:on:)","type":"topic","abstract":[],"title":"Left(_:on:)","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Left","kind":"identifier"},{"text":"<","kind":"text"},{"text":"T","kind":"genericParameter"},{"text":", ","kind":"text"},{"text":"U","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"on","kind":"externalParam"},{"text":": any ","kind":"text"},{"text":"XLExpression","preciseIdentifier":"s:7SwiftQL12XLExpressionP","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"U","kind":"typeIdentifier"},{"text":">) -> ","kind":"text"},{"text":"Join","preciseIdentifier":"s:7SwiftQL4JoinV","kind":"typeIdentifier"}],"kind":"symbol"},"doc://SwiftQL/documentation/SwiftQL/Join":{"role":"symbol","type":"topic","identifier":"doc:\/\/SwiftQL\/documentation\/SwiftQL\/Join","kind":"symbol","url":"\/documentation\/swiftql\/join","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Join","kind":"identifier"}],"navigatorTitle":[{"text":"Join","kind":"identifier"}],"title":"Join","abstract":[{"text":"Note: Right joins are not supported.  A workaround is to LEFT JOIN, and swap the tables in the FROM and JOIN clauses.","type":"text"},{"text":" ","type":"text"},{"text":"Note: “INNER JOIN”, “CROSS JOIN”, “JOIN”, “,” all perform a cartesian product, which returns every possible combination of rows from the two tables.","type":"text"},{"text":" ","type":"text"},{"text":"Note: CROSS JOIN is treated as a special case by XLite in that it returns the cartesian product but does not re-order the tables.","type":"text"}]},"doc://SwiftQL/documentation/SwiftQL/XLBoolean":{"title":"XLBoolean","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"kind":"identifier","text":"XLBoolean"}],"abstract":[],"type":"topic","url":"\/documentation\/swiftql\/xlboolean","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"XLBoolean"}],"kind":"symbol","identifier":"doc:\/\/SwiftQL\/documentation\/SwiftQL\/XLBoolean"}}}