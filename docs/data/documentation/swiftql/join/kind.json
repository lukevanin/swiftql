{"hierarchy":{"paths":[["doc:\/\/SwiftQL\/documentation\/SwiftQL","doc:\/\/SwiftQL\/documentation\/SwiftQL\/Join"]]},"topicSections":[{"identifiers":["doc:\/\/SwiftQL\/documentation\/SwiftQL\/Join\/Kind\/crossJoin","doc:\/\/SwiftQL\/documentation\/SwiftQL\/Join\/Kind\/innerJoin","doc:\/\/SwiftQL\/documentation\/SwiftQL\/Join\/Kind\/leftJoin","doc:\/\/SwiftQL\/documentation\/SwiftQL\/Join\/Kind\/outerJoin"],"title":"Enumeration Cases","generated":true,"anchor":"Enumeration-Cases"},{"identifiers":["doc:\/\/SwiftQL\/documentation\/SwiftQL\/Join\/Kind\/init(rawValue:)"],"title":"Initializers","generated":true,"anchor":"Initializers"},{"identifiers":["doc:\/\/SwiftQL\/documentation\/SwiftQL\/Join\/Kind\/Equatable-Implementations","doc:\/\/SwiftQL\/documentation\/SwiftQL\/Join\/Kind\/RawRepresentable-Implementations"],"title":"Default Implementations","generated":true,"anchor":"Default-Implementations"}],"schemaVersion":{"minor":3,"patch":0,"major":0},"metadata":{"roleHeading":"Enumeration","navigatorTitle":[{"text":"Kind","kind":"identifier"}],"fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"Kind"}],"modules":[{"name":"SwiftQL"}],"externalID":"s:7SwiftQL4JoinV4KindO","role":"symbol","symbolKind":"enum","title":"Join.Kind"},"relationshipsSections":[{"type":"conformsTo","title":"Conforms To","identifiers":["doc:\/\/SwiftQL\/SQ","doc:\/\/SwiftQL\/SH","doc:\/\/SwiftQL\/SY"],"kind":"relationships"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/swiftql\/join\/kind"]}],"primaryContentSections":[{"declarations":[{"languages":["swift"],"tokens":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"Kind"}],"platforms":["macOS"]}],"kind":"declarations"}],"sections":[],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/SwiftQL\/documentation\/SwiftQL\/Join\/Kind"},"kind":"symbol","references":{"doc://SwiftQL/documentation/SwiftQL/Join/Kind/leftJoin":{"role":"symbol","url":"\/documentation\/swiftql\/join\/kind\/leftjoin","title":"Join.Kind.leftJoin","abstract":[],"identifier":"doc:\/\/SwiftQL\/documentation\/SwiftQL\/Join\/Kind\/leftJoin","type":"topic","kind":"symbol","fragments":[{"text":"case","kind":"keyword"},{"text":" ","kind":"text"},{"text":"leftJoin","kind":"identifier"}]},"doc://SwiftQL/documentation/SwiftQL/Join/Kind/crossJoin":{"role":"symbol","fragments":[{"text":"case","kind":"keyword"},{"text":" ","kind":"text"},{"text":"crossJoin","kind":"identifier"}],"url":"\/documentation\/swiftql\/join\/kind\/crossjoin","type":"topic","kind":"symbol","abstract":[],"identifier":"doc:\/\/SwiftQL\/documentation\/SwiftQL\/Join\/Kind\/crossJoin","title":"Join.Kind.crossJoin"},"doc://SwiftQL/documentation/SwiftQL":{"kind":"symbol","identifier":"doc:\/\/SwiftQL\/documentation\/SwiftQL","role":"collection","abstract":[],"title":"SwiftQL","type":"topic","url":"\/documentation\/swiftql"},"doc://SwiftQL/SH":{"identifier":"doc:\/\/SwiftQL\/SH","title":"Swift.Hashable","type":"unresolvable"},"doc://SwiftQL/documentation/SwiftQL/Join/Kind/innerJoin":{"role":"symbol","url":"\/documentation\/swiftql\/join\/kind\/innerjoin","title":"Join.Kind.innerJoin","abstract":[],"identifier":"doc:\/\/SwiftQL\/documentation\/SwiftQL\/Join\/Kind\/innerJoin","kind":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"case"},{"kind":"text","text":" "},{"text":"innerJoin","kind":"identifier"}]},"doc://SwiftQL/documentation/SwiftQL/Join/Kind/init(rawValue:)":{"role":"symbol","url":"\/documentation\/swiftql\/join\/kind\/init(rawvalue:)","title":"init(rawValue:)","abstract":[],"identifier":"doc:\/\/SwiftQL\/documentation\/SwiftQL\/Join\/Kind\/init(rawValue:)","kind":"symbol","type":"topic","fragments":[{"text":"init","kind":"identifier"},{"kind":"text","text":"?("},{"text":"rawValue","kind":"externalParam"},{"kind":"text","text":": "},{"text":"String","preciseIdentifier":"s:SS","kind":"typeIdentifier"},{"text":")","kind":"text"}]},"doc://SwiftQL/documentation/SwiftQL/Join/Kind/outerJoin":{"role":"symbol","url":"\/documentation\/swiftql\/join\/kind\/outerjoin","title":"Join.Kind.outerJoin","abstract":[],"identifier":"doc:\/\/SwiftQL\/documentation\/SwiftQL\/Join\/Kind\/outerJoin","kind":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"case"},{"kind":"text","text":" "},{"kind":"identifier","text":"outerJoin"}]},"doc://SwiftQL/documentation/SwiftQL/Join/Kind":{"kind":"symbol","identifier":"doc:\/\/SwiftQL\/documentation\/SwiftQL\/Join\/Kind","role":"symbol","abstract":[],"url":"\/documentation\/swiftql\/join\/kind","type":"topic","title":"Join.Kind","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Kind","kind":"identifier"}],"navigatorTitle":[{"text":"Kind","kind":"identifier"}]},"doc://SwiftQL/SY":{"title":"Swift.RawRepresentable","type":"unresolvable","identifier":"doc:\/\/SwiftQL\/SY"},"doc://SwiftQL/SQ":{"type":"unresolvable","title":"Swift.Equatable","identifier":"doc:\/\/SwiftQL\/SQ"},"doc://SwiftQL/documentation/SwiftQL/Join":{"role":"symbol","type":"topic","identifier":"doc:\/\/SwiftQL\/documentation\/SwiftQL\/Join","kind":"symbol","url":"\/documentation\/swiftql\/join","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Join","kind":"identifier"}],"navigatorTitle":[{"text":"Join","kind":"identifier"}],"title":"Join","abstract":[{"text":"Note: Right joins are not supported.  A workaround is to LEFT JOIN, and swap the tables in the FROM and JOIN clauses.","type":"text"},{"text":" ","type":"text"},{"text":"Note: “INNER JOIN”, “CROSS JOIN”, “JOIN”, “,” all perform a cartesian product, which returns every possible combination of rows from the two tables.","type":"text"},{"text":" ","type":"text"},{"text":"Note: CROSS JOIN is treated as a special case by XLite in that it returns the cartesian product but does not re-order the tables.","type":"text"}]},"doc://SwiftQL/documentation/SwiftQL/Join/Kind/RawRepresentable-Implementations":{"abstract":[],"kind":"article","url":"\/documentation\/swiftql\/join\/kind\/rawrepresentable-implementations","role":"collectionGroup","title":"RawRepresentable Implementations","type":"topic","identifier":"doc:\/\/SwiftQL\/documentation\/SwiftQL\/Join\/Kind\/RawRepresentable-Implementations"},"doc://SwiftQL/documentation/SwiftQL/Join/Kind/Equatable-Implementations":{"abstract":[],"kind":"article","url":"\/documentation\/swiftql\/join\/kind\/equatable-implementations","role":"collectionGroup","title":"Equatable Implementations","type":"topic","identifier":"doc:\/\/SwiftQL\/documentation\/SwiftQL\/Join\/Kind\/Equatable-Implementations"}}}