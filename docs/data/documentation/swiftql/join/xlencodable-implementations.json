{"schemaVersion":{"patch":0,"major":0,"minor":3},"variants":[{"paths":["\/documentation\/swiftql\/join\/xlencodable-implementations"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/SwiftQL\/documentation\/SwiftQL\/Join\/XLEncodable-Implementations"},"sections":[],"topicSections":[{"anchor":"Type-Methods","identifiers":["doc:\/\/SwiftQL\/documentation\/SwiftQL\/Join\/unwrapSQL(context:builder:)"],"generated":true,"title":"Type Methods"}],"kind":"article","hierarchy":{"paths":[["doc:\/\/SwiftQL\/documentation\/SwiftQL","doc:\/\/SwiftQL\/documentation\/SwiftQL\/Join"]]},"metadata":{"title":"XLEncodable Implementations","modules":[{"name":"SwiftQL"}],"role":"collectionGroup","roleHeading":"API Collection"},"references":{"doc://SwiftQL/documentation/SwiftQL/Join/unwrapSQL(context:builder:)":{"title":"unwrapSQL(context:builder:)","type":"topic","identifier":"doc:\/\/SwiftQL\/documentation\/SwiftQL\/Join\/unwrapSQL(context:builder:)","role":"symbol","kind":"symbol","url":"\/documentation\/swiftql\/join\/unwrapsql(context:builder:)","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"unwrapSQL"},{"kind":"text","text":"("},{"kind":"externalParam","text":"context"},{"kind":"text","text":": "},{"kind":"keyword","text":"inout"},{"kind":"text","text":" any "},{"preciseIdentifier":"s:7SwiftQL9XLBuilderP","kind":"typeIdentifier","text":"XLBuilder"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"builder"},{"text":": (","kind":"text"},{"kind":"keyword","text":"inout"},{"text":" any ","kind":"text"},{"text":"XLBuilder","kind":"typeIdentifier","preciseIdentifier":"s:7SwiftQL9XLBuilderP"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:s4Voida","text":"Void","kind":"typeIdentifier"},{"text":")","kind":"text"}],"abstract":[]},"doc://SwiftQL/documentation/SwiftQL":{"title":"SwiftQL","role":"collection","type":"topic","abstract":[],"kind":"symbol","identifier":"doc:\/\/SwiftQL\/documentation\/SwiftQL","url":"\/documentation\/swiftql"},"doc://SwiftQL/documentation/SwiftQL/Join":{"title":"Join","type":"topic","navigatorTitle":[{"text":"Join","kind":"identifier"}],"identifier":"doc:\/\/SwiftQL\/documentation\/SwiftQL\/Join","role":"symbol","kind":"symbol","url":"\/documentation\/swiftql\/join","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"Join","kind":"identifier"}],"abstract":[{"type":"text","text":"Note: Right joins are not supported.  A workaround is to LEFT JOIN, and swap the tables in the FROM and JOIN clauses."},{"text":" ","type":"text"},{"text":"Note: “INNER JOIN”, “CROSS JOIN”, “JOIN”, “,” all perform a cartesian product, which returns every possible combination of rows from the two tables.","type":"text"},{"text":" ","type":"text"},{"text":"Note: CROSS JOIN is treated as a special case by XLite in that it returns the cartesian product but does not re-order the tables.","type":"text"}]}}}