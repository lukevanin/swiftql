{"primaryContentSections":[{"declarations":[{"tokens":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Outer","kind":"identifier"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"T"},{"text":", ","kind":"text"},{"kind":"genericParameter","text":"U"},{"text":">(","kind":"text"},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"table","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"externalParam","text":"on"},{"kind":"text","text":" "},{"text":"constraint","kind":"internalParam"},{"text":": any ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:7SwiftQL12XLExpressionP","identifier":"doc:\/\/SwiftQL\/documentation\/SwiftQL\/XLExpression","text":"XLExpression"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"U"},{"kind":"text","text":">) -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:7SwiftQL4JoinV","text":"Join","identifier":"doc:\/\/SwiftQL\/documentation\/SwiftQL\/Join"},{"kind":"text","text":" "},{"kind":"keyword","text":"where"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:7SwiftQL17XLMetaNamedResultP","text":"XLMetaNamedResult","identifier":"doc:\/\/SwiftQL\/documentation\/SwiftQL\/XLMetaNamedResult"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"U"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:7SwiftQL9XLBooleanP","text":"XLBoolean","identifier":"doc:\/\/SwiftQL\/documentation\/SwiftQL\/XLBoolean"}],"languages":["swift"],"platforms":["macOS"]}],"kind":"declarations"}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/SwiftQL\/documentation\/SwiftQL\/Join\/Outer(_:on:)"},"kind":"symbol","schemaVersion":{"patch":0,"minor":3,"major":0},"sections":[],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/swiftql\/join\/outer(_:on:)"]}],"hierarchy":{"paths":[["doc:\/\/SwiftQL\/documentation\/SwiftQL","doc:\/\/SwiftQL\/documentation\/SwiftQL\/Join"]]},"metadata":{"externalID":"s:7SwiftQL4JoinV5Outer_2onACx_AA12XLExpression_pq_1TRts_XPtAA17XLMetaNamedResultRzAA9XLBooleanR_r0_lFZ","symbolKind":"method","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"Outer","kind":"identifier"},{"kind":"text","text":"<"},{"text":"T","kind":"genericParameter"},{"kind":"text","text":", "},{"text":"U","kind":"genericParameter"},{"kind":"text","text":">("},{"text":"T","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"externalParam","text":"on"},{"kind":"text","text":": any "},{"text":"XLExpression","preciseIdentifier":"s:7SwiftQL12XLExpressionP","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"U"},{"kind":"text","text":">) -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:7SwiftQL4JoinV","text":"Join"}],"roleHeading":"Type Method","role":"symbol","title":"Outer(_:on:)","modules":[{"name":"SwiftQL"}]},"references":{"doc://SwiftQL/documentation/SwiftQL":{"identifier":"doc:\/\/SwiftQL\/documentation\/SwiftQL","abstract":[],"kind":"symbol","type":"topic","role":"collection","url":"\/documentation\/swiftql","title":"SwiftQL"},"doc://SwiftQL/documentation/SwiftQL/XLExpression":{"role":"symbol","title":"XLExpression","kind":"symbol","url":"\/documentation\/swiftql\/xlexpression","abstract":[{"text":"An XL expression. An expression evaluates to a value of a known type.","type":"text"}],"identifier":"doc:\/\/SwiftQL\/documentation\/SwiftQL\/XLExpression","navigatorTitle":[{"text":"XLExpression","kind":"identifier"}],"type":"topic","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"XLExpression","kind":"identifier"}]},"doc://SwiftQL/documentation/SwiftQL/Join/Outer(_:on:)":{"identifier":"doc:\/\/SwiftQL\/documentation\/SwiftQL\/Join\/Outer(_:on:)","abstract":[],"kind":"symbol","type":"topic","role":"symbol","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"Outer"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"U"},{"kind":"text","text":">("},{"text":"T","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"on","kind":"externalParam"},{"text":": any ","kind":"text"},{"text":"XLExpression","kind":"typeIdentifier","preciseIdentifier":"s:7SwiftQL12XLExpressionP"},{"text":"<","kind":"text"},{"text":"U","kind":"typeIdentifier"},{"text":">) -> ","kind":"text"},{"text":"Join","kind":"typeIdentifier","preciseIdentifier":"s:7SwiftQL4JoinV"}],"title":"Outer(_:on:)","url":"\/documentation\/swiftql\/join\/outer(_:on:)"},"doc://SwiftQL/documentation/SwiftQL/XLMetaNamedResult":{"role":"symbol","title":"XLMetaNamedResult","kind":"symbol","url":"\/documentation\/swiftql\/xlmetanamedresult","abstract":[],"identifier":"doc:\/\/SwiftQL\/documentation\/SwiftQL\/XLMetaNamedResult","navigatorTitle":[{"text":"XLMetaNamedResult","kind":"identifier"}],"type":"topic","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"XLMetaNamedResult","kind":"identifier"}]},"doc://SwiftQL/documentation/SwiftQL/XLBoolean":{"identifier":"doc:\/\/SwiftQL\/documentation\/SwiftQL\/XLBoolean","abstract":[],"url":"\/documentation\/swiftql\/xlboolean","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"XLBoolean"}],"type":"topic","title":"XLBoolean","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"text":"XLBoolean","kind":"identifier"}],"kind":"symbol"},"doc://SwiftQL/documentation/SwiftQL/Join":{"role":"symbol","title":"Join","abstract":[{"text":"Note: Right joins are not supported.  A workaround is to LEFT JOIN, and swap the tables in the FROM and JOIN clauses.","type":"text"},{"text":" ","type":"text"},{"text":"Note: “INNER JOIN”, “CROSS JOIN”, “JOIN”, “,” all perform a cartesian product, which returns every possible combination of rows from the two tables.","type":"text"},{"text":" ","type":"text"},{"text":"Note: CROSS JOIN is treated as a special case by XLite in that it returns the cartesian product but does not re-order the tables.","type":"text"}],"type":"topic","identifier":"doc:\/\/SwiftQL\/documentation\/SwiftQL\/Join","kind":"symbol","navigatorTitle":[{"text":"Join","kind":"identifier"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Join","kind":"identifier"}],"url":"\/documentation\/swiftql\/join"}}}